{"ast":null,"code":"import { useMemo } from 'react';\nimport { useSyncedRef } from '../useSyncedRef';\n/**\n * Like `React.useRef` but it is possible to define get and set handlers.\n *\n * @param initialValue Initial value of a hook.\n * @param onSet Function to be called while ref.current value set. Return value\n * will be stored in ref.\n * @param onGet Function to be called while ref.current value accessed. Return\n * value will be used as a return value.\n */\nexport function useHookableRef(initialValue, onSet, onGet) {\n  const onSetRef = useSyncedRef(onSet);\n  const onGetRef = useSyncedRef(onGet);\n  return useMemo(() => {\n    let v = initialValue;\n    return {\n      get current() {\n        return onGetRef.current === undefined ? v : onGetRef.current(v);\n      },\n      set current(val) {\n        v = onSetRef.current === undefined ? val : onSetRef.current(val);\n      }\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n}","map":{"version":3,"names":["useMemo","useSyncedRef","useHookableRef","initialValue","onSet","onGet","onSetRef","onGetRef","v","current","undefined","val"],"sources":["C:/Users/trs_user/Documents/my/bntu-library/node_modules/@react-hookz/web/esm/useHookableRef/index.js"],"sourcesContent":["import { useMemo } from 'react';\nimport { useSyncedRef } from '../useSyncedRef';\n/**\n * Like `React.useRef` but it is possible to define get and set handlers.\n *\n * @param initialValue Initial value of a hook.\n * @param onSet Function to be called while ref.current value set. Return value\n * will be stored in ref.\n * @param onGet Function to be called while ref.current value accessed. Return\n * value will be used as a return value.\n */\nexport function useHookableRef(initialValue, onSet, onGet) {\n    const onSetRef = useSyncedRef(onSet);\n    const onGetRef = useSyncedRef(onGet);\n    return useMemo(() => {\n        let v = initialValue;\n        return {\n            get current() {\n                return onGetRef.current === undefined ? v : onGetRef.current(v);\n            },\n            set current(val) {\n                v = onSetRef.current === undefined ? val : onSetRef.current(val);\n            },\n        };\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n}\n"],"mappings":"AAAA,SAASA,OAAO,QAAQ,OAAO;AAC/B,SAASC,YAAY,QAAQ,iBAAiB;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,cAAcA,CAACC,YAAY,EAAEC,KAAK,EAAEC,KAAK,EAAE;EACvD,MAAMC,QAAQ,GAAGL,YAAY,CAACG,KAAK,CAAC;EACpC,MAAMG,QAAQ,GAAGN,YAAY,CAACI,KAAK,CAAC;EACpC,OAAOL,OAAO,CAAC,MAAM;IACjB,IAAIQ,CAAC,GAAGL,YAAY;IACpB,OAAO;MACH,IAAIM,OAAOA,CAAA,EAAG;QACV,OAAOF,QAAQ,CAACE,OAAO,KAAKC,SAAS,GAAGF,CAAC,GAAGD,QAAQ,CAACE,OAAO,CAACD,CAAC,CAAC;MACnE,CAAC;MACD,IAAIC,OAAOA,CAACE,GAAG,EAAE;QACbH,CAAC,GAAGF,QAAQ,CAACG,OAAO,KAAKC,SAAS,GAAGC,GAAG,GAAGL,QAAQ,CAACG,OAAO,CAACE,GAAG,CAAC;MACpE;IACJ,CAAC;IACD;EACJ,CAAC,EAAE,EAAE,CAAC;AACV"},"metadata":{},"sourceType":"module","externalDependencies":[]}