{"ast":null,"code":"import{jsx as _jsx}from\"react/jsx-runtime\";export var tableColumns=[{Header:\"ID Open Alex\",accessor:\"id\"},{Header:\"ROR аффиляции\",accessor:\"ror\"},{Header:\"Аффиляция\",accessor:\"display_name\"},{Header:\"Аббревиатура\",accessor:\"display_name_acronym\"},{Header:\"Количество публикаций\",accessor:\"works_count\"},{Header:\"Цитирования\",accessor:\"cited_by_count\"},{Header:\"Публикации и цитирования по годам\",accessor:\"counts_by_year\"},{Header:\"URL\",accessor:\"homepage_url\"},{Header:\"Wikipedia\",accessor:\"wikipedia\"},{Header:\"Wikidata\",accessor:\"wikidata\"},{Header:\"Код страны\",accessor:\"country_code\"},{Header:\"Город\",accessor:\"geo_city\"},{Header:\"ID города\",accessor:\"geo_city_id\"},{Header:\"Страна\",accessor:\"geo_country\"},{Header:\"Тип аффиляции\",accessor:\"type\"},{Header:\"Тематика исследований\",accessor:\"concepts_name\"},{Header:\"Альтернативные названия\",accessor:\"international_names\"}];export var searchFieldsList=[{id:1,name:\"Аффиляция\",key:\"ror\"},{id:2,name:\"Название организации\",key:\"display_name.search\"},{id:3,name:\"Тип организации\",key:\"type\"},{id:4,name:\"Код страны\",key:\"country_code\"}];export var filtersList=tableColumns.map(function(item){return{text:item.Header,id:item.accessor};});var filtersByDefaultNames=[\"Автор\",\"Количество публикаций\",\"h-индекс\",\"Код страны\"];export var filtersByDefault=filtersList.filter(function(item){return filtersByDefaultNames.some(function(name){return name===item.text;});});export var getTransformedData=function getTransformedData(data){return data.map(function(item){var _item$display_name_ac,_item$counts_by_year,_item$ids,_item$ids2,_item$geo,_item$geo2,_item$geo3,_item$x_concepts;return{id:(item===null||item===void 0?void 0:item.id)&&/*#__PURE__*/_jsx(\"a\",{href:item.id,target:\"_blank\",rel:\"noreferrer\",children:item.id})||\"-\",ror:(item===null||item===void 0?void 0:item.ror)||\"-\",display_name:(item===null||item===void 0?void 0:item.display_name)||\"-\",display_name_acronym:(item===null||item===void 0?void 0:(_item$display_name_ac=item.display_name_acronyms)===null||_item$display_name_ac===void 0?void 0:_item$display_name_ac.find(function(x){return x!==undefined;}))||\"-\",works_count:(item===null||item===void 0?void 0:item.works_count)||\"-\",cited_by_count:(item===null||item===void 0?void 0:item.cited_by_count)||\"-\",counts_by_year:(item===null||item===void 0?void 0:(_item$counts_by_year=item.counts_by_year)===null||_item$counts_by_year===void 0?void 0:_item$counts_by_year.reduce(function(accumulator,currentValue){return accumulator+(accumulator===''?'':';')+' год:'+currentValue.year+\", публикаций:\"+currentValue.works_count+\", цитат:\"+currentValue.cited_by_count;},''))||\"-\",homepage_url:(item===null||item===void 0?void 0:item.homepage_url)||\"-\",wikipedia:(item===null||item===void 0?void 0:(_item$ids=item.ids)===null||_item$ids===void 0?void 0:_item$ids.wikipedia)||\"-\",wikidata:(item===null||item===void 0?void 0:(_item$ids2=item.ids)===null||_item$ids2===void 0?void 0:_item$ids2.wikidata)||\"-\",country_code:(item===null||item===void 0?void 0:item.country_code)||\"-\",geo_city:(item===null||item===void 0?void 0:(_item$geo=item.geo)===null||_item$geo===void 0?void 0:_item$geo.city)||\"-\",geo_city_id:(item===null||item===void 0?void 0:(_item$geo2=item.geo)===null||_item$geo2===void 0?void 0:_item$geo2.geonames_city_id)||\"-\",geo_country:(item===null||item===void 0?void 0:(_item$geo3=item.geo)===null||_item$geo3===void 0?void 0:_item$geo3.country)||\"-\",type:(item===null||item===void 0?void 0:item.type)||\"-\",concepts_name:(item===null||item===void 0?void 0:(_item$x_concepts=item.x_concepts)===null||_item$x_concepts===void 0?void 0:_item$x_concepts.reduce(function(accumulator,currentValue){return accumulator+(accumulator===''?'':', ')+currentValue.display_name;},''))||\"-\"//international_names: item?.international?.display_name?.reduce((accumulator, currentValue) => accumulator + (accumulator === '' ? '' : ', ') + currentValue.display_name, '') || \"-\", // need return all rows\n};});};","map":{"version":3,"names":["tableColumns","Header","accessor","searchFieldsList","id","name","key","filtersList","map","item","text","filtersByDefaultNames","filtersByDefault","filter","some","getTransformedData","data","_item$display_name_ac","_item$counts_by_year","_item$ids","_item$ids2","_item$geo","_item$geo2","_item$geo3","_item$x_concepts","_jsx","href","target","rel","children","ror","display_name","display_name_acronym","display_name_acronyms","find","x","undefined","works_count","cited_by_count","counts_by_year","reduce","accumulator","currentValue","year","homepage_url","wikipedia","ids","wikidata","country_code","geo_city","geo","city","geo_city_id","geonames_city_id","geo_country","country","type","concepts_name","x_concepts"],"sources":["C:/Users/trs_user/Documents/my/bntu-library/src/variables/affilations.js"],"sourcesContent":["export const tableColumns = [\r\n  {\r\n    Header: \"ID Open Alex\",\r\n    accessor: \"id\",\r\n  },\r\n  {\r\n    Header: \"ROR аффиляции\",\r\n    accessor: \"ror\",\r\n  },\r\n  {\r\n    Header: \"Аффиляция\",\r\n    accessor: \"display_name\",\r\n  },\r\n  {\r\n    Header: \"Аббревиатура\",\r\n    accessor: \"display_name_acronym\",\r\n  },\r\n  {\r\n    Header: \"Количество публикаций\",\r\n    accessor: \"works_count\",\r\n  },\r\n  {\r\n    Header: \"Цитирования\",\r\n    accessor: \"cited_by_count\",\r\n  },\r\n  {\r\n    Header: \"Публикации и цитирования по годам\",\r\n    accessor: \"counts_by_year\",\r\n  },\r\n  {\r\n    Header: \"URL\",\r\n    accessor: \"homepage_url\",\r\n  },\r\n  {\r\n    Header: \"Wikipedia\",\r\n    accessor: \"wikipedia\",\r\n  },\r\n  {\r\n    Header: \"Wikidata\",\r\n    accessor: \"wikidata\",\r\n  },\r\n  {\r\n    Header: \"Код страны\",\r\n    accessor: \"country_code\",\r\n  },\r\n  {\r\n    Header: \"Город\",\r\n    accessor: \"geo_city\",\r\n  },\r\n  {\r\n    Header: \"ID города\",\r\n    accessor: \"geo_city_id\",\r\n  },\r\n  {\r\n    Header: \"Страна\",\r\n    accessor: \"geo_country\",\r\n  },\r\n  {\r\n    Header: \"Тип аффиляции\",\r\n    accessor: \"type\",\r\n  },\r\n  {\r\n    Header: \"Тематика исследований\",\r\n    accessor: \"concepts_name\",\r\n  },\r\n  {\r\n    Header: \"Альтернативные названия\",\r\n    accessor: \"international_names\",\r\n  },\r\n];\r\n\r\nexport const searchFieldsList = [\r\n  { id: 1, name: \"Аффиляция\", key: \"ror\" },\r\n  { id: 2, name: \"Название организации\", key: \"display_name.search\" },\r\n  { id: 3, name: \"Тип организации\", key: \"type\" },\r\n  { id: 4, name: \"Код страны\", key: \"country_code\" },\r\n];\r\n\r\nexport const filtersList = tableColumns.map((item) => ({\r\n  text: item.Header,\r\n  id: item.accessor,\r\n}));\r\n\r\nconst filtersByDefaultNames = [\r\n  \"Автор\",\r\n  \"Количество публикаций\",\r\n  \"h-индекс\",\r\n  \"Код страны\",\r\n];\r\n\r\nexport const filtersByDefault = filtersList.filter((item) =>\r\n  filtersByDefaultNames.some((name) => name === item.text)\r\n);\r\n\r\nexport const getTransformedData = (data) =>\r\n  data.map((item) => ({\r\n    id:\r\n      (item?.id && (\r\n        <a href={item.id} target=\"_blank\" rel=\"noreferrer\">\r\n          {item.id}\r\n        </a>\r\n      )) ||\r\n      \"-\",\r\n    ror: item?.ror || \"-\",\r\n    display_name: item?.display_name || \"-\",\r\n    display_name_acronym: item?.display_name_acronyms?.find(x=>x!==undefined) || \"-\",\r\n    works_count: item?.works_count || \"-\",\r\n    cited_by_count: item?.cited_by_count || \"-\",\r\n    counts_by_year: item?.counts_by_year?.reduce((accumulator, currentValue) => accumulator + (accumulator === '' ? '' : ';') + ' год:' + currentValue.year + \", публикаций:\" + currentValue.works_count + \", цитат:\" + currentValue.cited_by_count, '') || \"-\",\r\n    homepage_url: item?.homepage_url || \"-\",\r\n    wikipedia: item?.ids?.wikipedia || \"-\",\r\n    wikidata: item?.ids?.wikidata || \"-\",\r\n    country_code: item?.country_code || \"-\",\r\n    geo_city: item?.geo?.city || \"-\",\r\n    geo_city_id: item?.geo?.geonames_city_id || \"-\",\r\n    geo_country: item?.geo?.country || \"-\",\r\n    type: item?.type || \"-\",\r\n    concepts_name: item?.x_concepts?.reduce((accumulator, currentValue) => accumulator + (accumulator === '' ? '' : ', ') + currentValue.display_name, '') || \"-\",\r\n    //international_names: item?.international?.display_name?.reduce((accumulator, currentValue) => accumulator + (accumulator === '' ? '' : ', ') + currentValue.display_name, '') || \"-\", // need return all rows\r\n  }));"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}