{"ast":null,"code":"import { useCallback, useEffect, useRef } from 'react';\n/**\n * Returns a function that returns the current mount state. This hook is useful when you have to\n * detect component mount state within async effects.\n *\n * @param initialValue Initial value.\n *\n * @return Function that returns `true` only if the component is mounted.\n */\nexport function useIsMounted() {\n  let initialValue = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n  const isMounted = useRef(initialValue);\n  const get = useCallback(() => isMounted.current, []);\n  useEffect(() => {\n    isMounted.current = true;\n    return () => {\n      isMounted.current = false;\n    };\n  }, []);\n  return get;\n}","map":{"version":3,"names":["useCallback","useEffect","useRef","useIsMounted","initialValue","arguments","length","undefined","isMounted","get","current"],"sources":["C:/Users/trs_user/Documents/my/bntu-library/node_modules/@react-hookz/web/esm/useIsMounted/index.js"],"sourcesContent":["import { useCallback, useEffect, useRef } from 'react';\n/**\n * Returns a function that returns the current mount state. This hook is useful when you have to\n * detect component mount state within async effects.\n *\n * @param initialValue Initial value.\n *\n * @return Function that returns `true` only if the component is mounted.\n */\nexport function useIsMounted(initialValue = false) {\n    const isMounted = useRef(initialValue);\n    const get = useCallback(() => isMounted.current, []);\n    useEffect(() => {\n        isMounted.current = true;\n        return () => {\n            isMounted.current = false;\n        };\n    }, []);\n    return get;\n}\n"],"mappings":"AAAA,SAASA,WAAW,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,YAAYA,CAAA,EAAuB;EAAA,IAAtBC,YAAY,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,KAAK;EAC7C,MAAMG,SAAS,GAAGN,MAAM,CAACE,YAAY,CAAC;EACtC,MAAMK,GAAG,GAAGT,WAAW,CAAC,MAAMQ,SAAS,CAACE,OAAO,EAAE,EAAE,CAAC;EACpDT,SAAS,CAAC,MAAM;IACZO,SAAS,CAACE,OAAO,GAAG,IAAI;IACxB,OAAO,MAAM;MACTF,SAAS,CAACE,OAAO,GAAG,KAAK;IAC7B,CAAC;EACL,CAAC,EAAE,EAAE,CAAC;EACN,OAAOD,GAAG;AACd"},"metadata":{},"sourceType":"module","externalDependencies":[]}