{"ast":null,"code":"/* eslint-disable @typescript-eslint/no-use-before-define,no-use-before-define */\nimport { useEffect, useMemo, useState } from 'react';\nimport { useFirstMountState } from '../useFirstMountState';\nimport { useIsomorphicLayoutEffect } from '../useIsomorphicLayoutEffect';\nimport { useSyncedRef } from '../useSyncedRef';\nimport { useUpdateEffect } from '../useUpdateEffect';\nimport { isBrowser } from \"../util/const.js\";\nimport { off, on } from \"../util/misc.js\";\nimport { resolveHookState } from \"../util/resolveHookState.js\";\nconst storageListeners = new Map();\nconst invokeStorageKeyListeners = (s, key, value, skipListener) => {\n  storageListeners.get(s)?.get(key)?.forEach(listener => {\n    if (listener !== skipListener) {\n      listener(value);\n    }\n  });\n};\nconst storageEventHandler = evt => {\n  if (evt.storageArea && evt.key && evt.newValue) {\n    invokeStorageKeyListeners(evt.storageArea, evt.key, evt.newValue);\n  }\n};\nconst addStorageListener = (s, key, listener) => {\n  // in case of first listener added within browser environment we\n  // want to bind single storage event handler\n  if (isBrowser && storageListeners.size === 0) {\n    on(window, 'storage', storageEventHandler, {\n      passive: true\n    });\n  }\n  let keys = storageListeners.get(s);\n  if (!keys) {\n    keys = new Map();\n    storageListeners.set(s, keys);\n  }\n  let listeners = keys.get(key);\n  if (!listeners) {\n    listeners = new Set();\n    keys.set(key, listeners);\n  }\n  listeners.add(listener);\n};\nconst removeStorageListener = (s, key, listener) => {\n  const keys = storageListeners.get(s);\n  /* istanbul ignore next */\n  if (!keys) {\n    return;\n  }\n  const listeners = keys.get(key);\n  /* istanbul ignore next */\n  if (!listeners) {\n    return;\n  }\n  listeners.delete(listener);\n  if (!listeners.size) {\n    keys.delete(key);\n  }\n  if (!keys.size) {\n    storageListeners.delete(s);\n  }\n  // unbind storage event handler in browser environment in case there is no\n  // storage keys listeners left\n  if (isBrowser && !storageListeners.size) {\n    off(window, 'storage', storageEventHandler);\n  }\n};\nconst DEFAULT_OPTIONS = {\n  defaultValue: null,\n  initializeWithValue: true\n};\nexport function useStorageValue(storage, key, options) {\n  const optionsRef = useSyncedRef({\n    ...DEFAULT_OPTIONS,\n    ...options\n  });\n  const parse = (str, fallback) => {\n    const parseFunction = optionsRef.current.parse ?? defaultParse;\n    return parseFunction(str, fallback);\n  };\n  const stringify = data => {\n    const stringifyFunction = optionsRef.current.stringify ?? defaultStringify;\n    return stringifyFunction(data);\n  };\n  const storageActions = useSyncedRef({\n    fetchRaw: () => storage.getItem(key),\n    fetch: () => parse(storageActions.current.fetchRaw(), optionsRef.current.defaultValue),\n    remove: () => storage.removeItem(key),\n    store: val => {\n      const stringified = stringify(val);\n      if (stringified !== null) {\n        storage.setItem(key, stringified);\n      }\n      return stringified;\n    }\n  });\n  const isFirstMount = useFirstMountState();\n  const [state, setState] = useState(optionsRef.current?.initializeWithValue && isFirstMount ? storageActions.current.fetch() : undefined);\n  const stateRef = useSyncedRef(state);\n  const stateActions = useSyncedRef({\n    fetch: () => setState(storageActions.current.fetch()),\n    setRawVal: val => {\n      setState(parse(val, optionsRef.current.defaultValue));\n    }\n  });\n  useUpdateEffect(() => {\n    stateActions.current.fetch();\n  }, [key]);\n  useEffect(() => {\n    if (!optionsRef.current.initializeWithValue) {\n      stateActions.current.fetch();\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  useIsomorphicLayoutEffect(() => {\n    const handler = stateActions.current.setRawVal;\n    addStorageListener(storage, key, handler);\n    return () => {\n      removeStorageListener(storage, key, handler);\n    };\n  }, [storage, key]);\n  const actions = useSyncedRef({\n    set: val => {\n      if (!isBrowser) return;\n      const s = resolveHookState(val, stateRef.current);\n      const storeVal = storageActions.current.store(s);\n      if (storeVal !== null) {\n        invokeStorageKeyListeners(storage, key, storeVal);\n      }\n    },\n    delete: () => {\n      if (!isBrowser) return;\n      storageActions.current.remove();\n      invokeStorageKeyListeners(storage, key, null);\n    },\n    fetch: () => {\n      if (!isBrowser) return;\n      invokeStorageKeyListeners(storage, key, storageActions.current.fetchRaw());\n    }\n  });\n  // make actions static so developers can pass methods further\n  const staticActions = useMemo(() => ({\n    set: v => actions.current.set(v),\n    remove: () => actions.current.delete(),\n    fetch: () => actions.current.fetch()\n  }),\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  []);\n  return useMemo(() => ({\n    value: state,\n    ...staticActions\n  }),\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  [state]);\n}\nconst defaultStringify = data => {\n  if (data === null) {\n    /* istanbul ignore next */\n    if (process.env.NODE_ENV === 'development') {\n      // eslint-disable-next-line no-console\n      console.warn(`'null' is not a valid data for useStorageValue hook, this operation will take no effect`);\n    }\n    return null;\n  }\n  try {\n    return JSON.stringify(data);\n  } catch (error) /* istanbul ignore next */{\n    // I have absolutely no idea how to cover this, since modern JSON.stringify does not throw on\n    // cyclic references anymore\n    // eslint-disable-next-line no-console\n    console.warn(error);\n    return null;\n  }\n};\nconst defaultParse = (str, fallback) => {\n  if (str === null) return fallback;\n  try {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n    return JSON.parse(str);\n  } catch (error) {\n    // eslint-disable-next-line no-console\n    console.warn(error);\n    return fallback;\n  }\n};","map":{"version":3,"names":["useEffect","useMemo","useState","useFirstMountState","useIsomorphicLayoutEffect","useSyncedRef","useUpdateEffect","isBrowser","off","on","resolveHookState","storageListeners","Map","invokeStorageKeyListeners","s","key","value","skipListener","get","forEach","listener","storageEventHandler","evt","storageArea","newValue","addStorageListener","size","window","passive","keys","set","listeners","Set","add","removeStorageListener","delete","DEFAULT_OPTIONS","defaultValue","initializeWithValue","useStorageValue","storage","options","optionsRef","parse","str","fallback","parseFunction","current","defaultParse","stringify","data","stringifyFunction","defaultStringify","storageActions","fetchRaw","getItem","fetch","remove","removeItem","store","val","stringified","setItem","isFirstMount","state","setState","undefined","stateRef","stateActions","setRawVal","handler","actions","storeVal","staticActions","v","process","env","NODE_ENV","console","warn","JSON","error"],"sources":["C:/Users/trs_user/Documents/my/bntu-library/node_modules/@react-hookz/web/esm/useStorageValue/index.js"],"sourcesContent":["/* eslint-disable @typescript-eslint/no-use-before-define,no-use-before-define */\nimport { useEffect, useMemo, useState } from 'react';\nimport { useFirstMountState } from '../useFirstMountState';\nimport { useIsomorphicLayoutEffect } from '../useIsomorphicLayoutEffect';\nimport { useSyncedRef } from '../useSyncedRef';\nimport { useUpdateEffect } from '../useUpdateEffect';\nimport { isBrowser } from \"../util/const.js\";\nimport { off, on } from \"../util/misc.js\";\nimport { resolveHookState } from \"../util/resolveHookState.js\";\nconst storageListeners = new Map();\nconst invokeStorageKeyListeners = (s, key, value, skipListener) => {\n    storageListeners\n        .get(s)\n        ?.get(key)\n        ?.forEach((listener) => {\n        if (listener !== skipListener) {\n            listener(value);\n        }\n    });\n};\nconst storageEventHandler = (evt) => {\n    if (evt.storageArea && evt.key && evt.newValue) {\n        invokeStorageKeyListeners(evt.storageArea, evt.key, evt.newValue);\n    }\n};\nconst addStorageListener = (s, key, listener) => {\n    // in case of first listener added within browser environment we\n    // want to bind single storage event handler\n    if (isBrowser && storageListeners.size === 0) {\n        on(window, 'storage', storageEventHandler, { passive: true });\n    }\n    let keys = storageListeners.get(s);\n    if (!keys) {\n        keys = new Map();\n        storageListeners.set(s, keys);\n    }\n    let listeners = keys.get(key);\n    if (!listeners) {\n        listeners = new Set();\n        keys.set(key, listeners);\n    }\n    listeners.add(listener);\n};\nconst removeStorageListener = (s, key, listener) => {\n    const keys = storageListeners.get(s);\n    /* istanbul ignore next */\n    if (!keys) {\n        return;\n    }\n    const listeners = keys.get(key);\n    /* istanbul ignore next */\n    if (!listeners) {\n        return;\n    }\n    listeners.delete(listener);\n    if (!listeners.size) {\n        keys.delete(key);\n    }\n    if (!keys.size) {\n        storageListeners.delete(s);\n    }\n    // unbind storage event handler in browser environment in case there is no\n    // storage keys listeners left\n    if (isBrowser && !storageListeners.size) {\n        off(window, 'storage', storageEventHandler);\n    }\n};\nconst DEFAULT_OPTIONS = {\n    defaultValue: null,\n    initializeWithValue: true,\n};\nexport function useStorageValue(storage, key, options) {\n    const optionsRef = useSyncedRef({ ...DEFAULT_OPTIONS, ...options });\n    const parse = (str, fallback) => {\n        const parseFunction = optionsRef.current.parse ?? defaultParse;\n        return parseFunction(str, fallback);\n    };\n    const stringify = (data) => {\n        const stringifyFunction = optionsRef.current.stringify ?? defaultStringify;\n        return stringifyFunction(data);\n    };\n    const storageActions = useSyncedRef({\n        fetchRaw: () => storage.getItem(key),\n        fetch: () => parse(storageActions.current.fetchRaw(), optionsRef.current.defaultValue),\n        remove: () => storage.removeItem(key),\n        store: (val) => {\n            const stringified = stringify(val);\n            if (stringified !== null) {\n                storage.setItem(key, stringified);\n            }\n            return stringified;\n        },\n    });\n    const isFirstMount = useFirstMountState();\n    const [state, setState] = useState(optionsRef.current?.initializeWithValue && isFirstMount\n        ? storageActions.current.fetch()\n        : undefined);\n    const stateRef = useSyncedRef(state);\n    const stateActions = useSyncedRef({\n        fetch: () => setState(storageActions.current.fetch()),\n        setRawVal: (val) => {\n            setState(parse(val, optionsRef.current.defaultValue));\n        },\n    });\n    useUpdateEffect(() => {\n        stateActions.current.fetch();\n    }, [key]);\n    useEffect(() => {\n        if (!optionsRef.current.initializeWithValue) {\n            stateActions.current.fetch();\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n    useIsomorphicLayoutEffect(() => {\n        const handler = stateActions.current.setRawVal;\n        addStorageListener(storage, key, handler);\n        return () => {\n            removeStorageListener(storage, key, handler);\n        };\n    }, [storage, key]);\n    const actions = useSyncedRef({\n        set: (val) => {\n            if (!isBrowser)\n                return;\n            const s = resolveHookState(val, stateRef.current);\n            const storeVal = storageActions.current.store(s);\n            if (storeVal !== null) {\n                invokeStorageKeyListeners(storage, key, storeVal);\n            }\n        },\n        delete: () => {\n            if (!isBrowser)\n                return;\n            storageActions.current.remove();\n            invokeStorageKeyListeners(storage, key, null);\n        },\n        fetch: () => {\n            if (!isBrowser)\n                return;\n            invokeStorageKeyListeners(storage, key, storageActions.current.fetchRaw());\n        },\n    });\n    // make actions static so developers can pass methods further\n    const staticActions = useMemo(() => ({\n        set: ((v) => actions.current.set(v)),\n        remove: () => actions.current.delete(),\n        fetch: () => actions.current.fetch(),\n    }), \n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    []);\n    return useMemo(() => ({\n        value: state,\n        ...staticActions,\n    }), \n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [state]);\n}\nconst defaultStringify = (data) => {\n    if (data === null) {\n        /* istanbul ignore next */\n        if (process.env.NODE_ENV === 'development') {\n            // eslint-disable-next-line no-console\n            console.warn(`'null' is not a valid data for useStorageValue hook, this operation will take no effect`);\n        }\n        return null;\n    }\n    try {\n        return JSON.stringify(data);\n    }\n    catch (error) /* istanbul ignore next */ {\n        // I have absolutely no idea how to cover this, since modern JSON.stringify does not throw on\n        // cyclic references anymore\n        // eslint-disable-next-line no-console\n        console.warn(error);\n        return null;\n    }\n};\nconst defaultParse = (str, fallback) => {\n    if (str === null)\n        return fallback;\n    try {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n        return JSON.parse(str);\n    }\n    catch (error) {\n        // eslint-disable-next-line no-console\n        console.warn(error);\n        return fallback;\n    }\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}