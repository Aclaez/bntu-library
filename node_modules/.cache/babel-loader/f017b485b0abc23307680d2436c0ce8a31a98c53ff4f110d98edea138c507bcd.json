{"ast":null,"code":"import _slicedToArray from \"C:/Users/trs_user/Documents/my/bntu-library/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _objectSpread from \"C:/Users/trs_user/Documents/my/bntu-library/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\n/* eslint-disable @typescript-eslint/no-use-before-define,no-use-before-define */\nimport { useEffect, useMemo, useState } from 'react';\nimport { useFirstMountState } from '../useFirstMountState';\nimport { useIsomorphicLayoutEffect } from '../useIsomorphicLayoutEffect';\nimport { useSyncedRef } from '../useSyncedRef';\nimport { useUpdateEffect } from '../useUpdateEffect';\nimport { isBrowser } from \"../util/const.js\";\nimport { off, on } from \"../util/misc.js\";\nimport { resolveHookState } from \"../util/resolveHookState.js\";\nvar storageListeners = new Map();\nvar invokeStorageKeyListeners = function invokeStorageKeyListeners(s, key, value, skipListener) {\n  var _storageListeners$get, _storageListeners$get2;\n  (_storageListeners$get = storageListeners.get(s)) === null || _storageListeners$get === void 0 ? void 0 : (_storageListeners$get2 = _storageListeners$get.get(key)) === null || _storageListeners$get2 === void 0 ? void 0 : _storageListeners$get2.forEach(function (listener) {\n    if (listener !== skipListener) {\n      listener(value);\n    }\n  });\n};\nvar storageEventHandler = function storageEventHandler(evt) {\n  if (evt.storageArea && evt.key && evt.newValue) {\n    invokeStorageKeyListeners(evt.storageArea, evt.key, evt.newValue);\n  }\n};\nvar addStorageListener = function addStorageListener(s, key, listener) {\n  // in case of first listener added within browser environment we\n  // want to bind single storage event handler\n  if (isBrowser && storageListeners.size === 0) {\n    on(window, 'storage', storageEventHandler, {\n      passive: true\n    });\n  }\n  var keys = storageListeners.get(s);\n  if (!keys) {\n    keys = new Map();\n    storageListeners.set(s, keys);\n  }\n  var listeners = keys.get(key);\n  if (!listeners) {\n    listeners = new Set();\n    keys.set(key, listeners);\n  }\n  listeners.add(listener);\n};\nvar removeStorageListener = function removeStorageListener(s, key, listener) {\n  var keys = storageListeners.get(s);\n  /* istanbul ignore next */\n  if (!keys) {\n    return;\n  }\n  var listeners = keys.get(key);\n  /* istanbul ignore next */\n  if (!listeners) {\n    return;\n  }\n  listeners.delete(listener);\n  if (!listeners.size) {\n    keys.delete(key);\n  }\n  if (!keys.size) {\n    storageListeners.delete(s);\n  }\n  // unbind storage event handler in browser environment in case there is no\n  // storage keys listeners left\n  if (isBrowser && !storageListeners.size) {\n    off(window, 'storage', storageEventHandler);\n  }\n};\nvar DEFAULT_OPTIONS = {\n  defaultValue: null,\n  initializeWithValue: true\n};\nexport function useStorageValue(storage, key, options) {\n  var _optionsRef$current;\n  var optionsRef = useSyncedRef(_objectSpread(_objectSpread({}, DEFAULT_OPTIONS), options));\n  var parse = function parse(str, fallback) {\n    var _optionsRef$current$p;\n    var parseFunction = (_optionsRef$current$p = optionsRef.current.parse) !== null && _optionsRef$current$p !== void 0 ? _optionsRef$current$p : defaultParse;\n    return parseFunction(str, fallback);\n  };\n  var stringify = function stringify(data) {\n    var _optionsRef$current$s;\n    var stringifyFunction = (_optionsRef$current$s = optionsRef.current.stringify) !== null && _optionsRef$current$s !== void 0 ? _optionsRef$current$s : defaultStringify;\n    return stringifyFunction(data);\n  };\n  var storageActions = useSyncedRef({\n    fetchRaw: function fetchRaw() {\n      return storage.getItem(key);\n    },\n    fetch: function fetch() {\n      return parse(storageActions.current.fetchRaw(), optionsRef.current.defaultValue);\n    },\n    remove: function remove() {\n      return storage.removeItem(key);\n    },\n    store: function store(val) {\n      var stringified = stringify(val);\n      if (stringified !== null) {\n        storage.setItem(key, stringified);\n      }\n      return stringified;\n    }\n  });\n  var isFirstMount = useFirstMountState();\n  var _useState = useState((_optionsRef$current = optionsRef.current) !== null && _optionsRef$current !== void 0 && _optionsRef$current.initializeWithValue && isFirstMount ? storageActions.current.fetch() : undefined),\n    _useState2 = _slicedToArray(_useState, 2),\n    state = _useState2[0],\n    setState = _useState2[1];\n  var stateRef = useSyncedRef(state);\n  var stateActions = useSyncedRef({\n    fetch: function fetch() {\n      return setState(storageActions.current.fetch());\n    },\n    setRawVal: function setRawVal(val) {\n      setState(parse(val, optionsRef.current.defaultValue));\n    }\n  });\n  useUpdateEffect(function () {\n    stateActions.current.fetch();\n  }, [key]);\n  useEffect(function () {\n    if (!optionsRef.current.initializeWithValue) {\n      stateActions.current.fetch();\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  useIsomorphicLayoutEffect(function () {\n    var handler = stateActions.current.setRawVal;\n    addStorageListener(storage, key, handler);\n    return function () {\n      removeStorageListener(storage, key, handler);\n    };\n  }, [storage, key]);\n  var actions = useSyncedRef({\n    set: function set(val) {\n      if (!isBrowser) return;\n      var s = resolveHookState(val, stateRef.current);\n      var storeVal = storageActions.current.store(s);\n      if (storeVal !== null) {\n        invokeStorageKeyListeners(storage, key, storeVal);\n      }\n    },\n    delete: function _delete() {\n      if (!isBrowser) return;\n      storageActions.current.remove();\n      invokeStorageKeyListeners(storage, key, null);\n    },\n    fetch: function fetch() {\n      if (!isBrowser) return;\n      invokeStorageKeyListeners(storage, key, storageActions.current.fetchRaw());\n    }\n  });\n  // make actions static so developers can pass methods further\n  var staticActions = useMemo(function () {\n    return {\n      set: function set(v) {\n        return actions.current.set(v);\n      },\n      remove: function remove() {\n        return actions.current.delete();\n      },\n      fetch: function fetch() {\n        return actions.current.fetch();\n      }\n    };\n  },\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  []);\n  return useMemo(function () {\n    return _objectSpread({\n      value: state\n    }, staticActions);\n  },\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  [state]);\n}\nvar defaultStringify = function defaultStringify(data) {\n  if (data === null) {\n    /* istanbul ignore next */\n    if (process.env.NODE_ENV === 'development') {\n      // eslint-disable-next-line no-console\n      console.warn(\"'null' is not a valid data for useStorageValue hook, this operation will take no effect\");\n    }\n    return null;\n  }\n  try {\n    return JSON.stringify(data);\n  } catch (error) /* istanbul ignore next */{\n    // I have absolutely no idea how to cover this, since modern JSON.stringify does not throw on\n    // cyclic references anymore\n    // eslint-disable-next-line no-console\n    console.warn(error);\n    return null;\n  }\n};\nvar defaultParse = function defaultParse(str, fallback) {\n  if (str === null) return fallback;\n  try {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n    return JSON.parse(str);\n  } catch (error) {\n    // eslint-disable-next-line no-console\n    console.warn(error);\n    return fallback;\n  }\n};","map":{"version":3,"names":["useEffect","useMemo","useState","useFirstMountState","useIsomorphicLayoutEffect","useSyncedRef","useUpdateEffect","isBrowser","off","on","resolveHookState","storageListeners","Map","invokeStorageKeyListeners","s","key","value","skipListener","_storageListeners$get","_storageListeners$get2","get","forEach","listener","storageEventHandler","evt","storageArea","newValue","addStorageListener","size","window","passive","keys","set","listeners","Set","add","removeStorageListener","delete","DEFAULT_OPTIONS","defaultValue","initializeWithValue","useStorageValue","storage","options","_optionsRef$current","optionsRef","_objectSpread","parse","str","fallback","_optionsRef$current$p","parseFunction","current","defaultParse","stringify","data","_optionsRef$current$s","stringifyFunction","defaultStringify","storageActions","fetchRaw","getItem","fetch","remove","removeItem","store","val","stringified","setItem","isFirstMount","_useState","undefined","_useState2","_slicedToArray","state","setState","stateRef","stateActions","setRawVal","handler","actions","storeVal","_delete","staticActions","v","process","env","NODE_ENV","console","warn","JSON","error"],"sources":["C:/Users/trs_user/Documents/my/bntu-library/node_modules/@react-hookz/web/esm/useStorageValue/index.js"],"sourcesContent":["/* eslint-disable @typescript-eslint/no-use-before-define,no-use-before-define */\nimport { useEffect, useMemo, useState } from 'react';\nimport { useFirstMountState } from '../useFirstMountState';\nimport { useIsomorphicLayoutEffect } from '../useIsomorphicLayoutEffect';\nimport { useSyncedRef } from '../useSyncedRef';\nimport { useUpdateEffect } from '../useUpdateEffect';\nimport { isBrowser } from \"../util/const.js\";\nimport { off, on } from \"../util/misc.js\";\nimport { resolveHookState } from \"../util/resolveHookState.js\";\nconst storageListeners = new Map();\nconst invokeStorageKeyListeners = (s, key, value, skipListener) => {\n    storageListeners\n        .get(s)\n        ?.get(key)\n        ?.forEach((listener) => {\n        if (listener !== skipListener) {\n            listener(value);\n        }\n    });\n};\nconst storageEventHandler = (evt) => {\n    if (evt.storageArea && evt.key && evt.newValue) {\n        invokeStorageKeyListeners(evt.storageArea, evt.key, evt.newValue);\n    }\n};\nconst addStorageListener = (s, key, listener) => {\n    // in case of first listener added within browser environment we\n    // want to bind single storage event handler\n    if (isBrowser && storageListeners.size === 0) {\n        on(window, 'storage', storageEventHandler, { passive: true });\n    }\n    let keys = storageListeners.get(s);\n    if (!keys) {\n        keys = new Map();\n        storageListeners.set(s, keys);\n    }\n    let listeners = keys.get(key);\n    if (!listeners) {\n        listeners = new Set();\n        keys.set(key, listeners);\n    }\n    listeners.add(listener);\n};\nconst removeStorageListener = (s, key, listener) => {\n    const keys = storageListeners.get(s);\n    /* istanbul ignore next */\n    if (!keys) {\n        return;\n    }\n    const listeners = keys.get(key);\n    /* istanbul ignore next */\n    if (!listeners) {\n        return;\n    }\n    listeners.delete(listener);\n    if (!listeners.size) {\n        keys.delete(key);\n    }\n    if (!keys.size) {\n        storageListeners.delete(s);\n    }\n    // unbind storage event handler in browser environment in case there is no\n    // storage keys listeners left\n    if (isBrowser && !storageListeners.size) {\n        off(window, 'storage', storageEventHandler);\n    }\n};\nconst DEFAULT_OPTIONS = {\n    defaultValue: null,\n    initializeWithValue: true,\n};\nexport function useStorageValue(storage, key, options) {\n    const optionsRef = useSyncedRef({ ...DEFAULT_OPTIONS, ...options });\n    const parse = (str, fallback) => {\n        const parseFunction = optionsRef.current.parse ?? defaultParse;\n        return parseFunction(str, fallback);\n    };\n    const stringify = (data) => {\n        const stringifyFunction = optionsRef.current.stringify ?? defaultStringify;\n        return stringifyFunction(data);\n    };\n    const storageActions = useSyncedRef({\n        fetchRaw: () => storage.getItem(key),\n        fetch: () => parse(storageActions.current.fetchRaw(), optionsRef.current.defaultValue),\n        remove: () => storage.removeItem(key),\n        store: (val) => {\n            const stringified = stringify(val);\n            if (stringified !== null) {\n                storage.setItem(key, stringified);\n            }\n            return stringified;\n        },\n    });\n    const isFirstMount = useFirstMountState();\n    const [state, setState] = useState(optionsRef.current?.initializeWithValue && isFirstMount\n        ? storageActions.current.fetch()\n        : undefined);\n    const stateRef = useSyncedRef(state);\n    const stateActions = useSyncedRef({\n        fetch: () => setState(storageActions.current.fetch()),\n        setRawVal: (val) => {\n            setState(parse(val, optionsRef.current.defaultValue));\n        },\n    });\n    useUpdateEffect(() => {\n        stateActions.current.fetch();\n    }, [key]);\n    useEffect(() => {\n        if (!optionsRef.current.initializeWithValue) {\n            stateActions.current.fetch();\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n    useIsomorphicLayoutEffect(() => {\n        const handler = stateActions.current.setRawVal;\n        addStorageListener(storage, key, handler);\n        return () => {\n            removeStorageListener(storage, key, handler);\n        };\n    }, [storage, key]);\n    const actions = useSyncedRef({\n        set: (val) => {\n            if (!isBrowser)\n                return;\n            const s = resolveHookState(val, stateRef.current);\n            const storeVal = storageActions.current.store(s);\n            if (storeVal !== null) {\n                invokeStorageKeyListeners(storage, key, storeVal);\n            }\n        },\n        delete: () => {\n            if (!isBrowser)\n                return;\n            storageActions.current.remove();\n            invokeStorageKeyListeners(storage, key, null);\n        },\n        fetch: () => {\n            if (!isBrowser)\n                return;\n            invokeStorageKeyListeners(storage, key, storageActions.current.fetchRaw());\n        },\n    });\n    // make actions static so developers can pass methods further\n    const staticActions = useMemo(() => ({\n        set: ((v) => actions.current.set(v)),\n        remove: () => actions.current.delete(),\n        fetch: () => actions.current.fetch(),\n    }), \n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    []);\n    return useMemo(() => ({\n        value: state,\n        ...staticActions,\n    }), \n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [state]);\n}\nconst defaultStringify = (data) => {\n    if (data === null) {\n        /* istanbul ignore next */\n        if (process.env.NODE_ENV === 'development') {\n            // eslint-disable-next-line no-console\n            console.warn(`'null' is not a valid data for useStorageValue hook, this operation will take no effect`);\n        }\n        return null;\n    }\n    try {\n        return JSON.stringify(data);\n    }\n    catch (error) /* istanbul ignore next */ {\n        // I have absolutely no idea how to cover this, since modern JSON.stringify does not throw on\n        // cyclic references anymore\n        // eslint-disable-next-line no-console\n        console.warn(error);\n        return null;\n    }\n};\nconst defaultParse = (str, fallback) => {\n    if (str === null)\n        return fallback;\n    try {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n        return JSON.parse(str);\n    }\n    catch (error) {\n        // eslint-disable-next-line no-console\n        console.warn(error);\n        return fallback;\n    }\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}