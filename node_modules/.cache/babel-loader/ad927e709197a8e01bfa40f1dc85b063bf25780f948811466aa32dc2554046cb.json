{"ast":null,"code":"import { useMemo, useRef } from 'react';\nimport { useAsync } from '../useAsync';\n/**\n * Like `useAsync`, but also provides `AbortSignal` as the first argument to the async function.\n *\n * @param asyncFn Function that returns a promise.\n * @param initialValue Value that will be set on initialisation before the async function is\n * executed.\n */\nexport function useAsyncAbortable(asyncFn, initialValue) {\n  const abortController = useRef();\n  const fn = async function () {\n    // abort previous async\n    abortController.current?.abort();\n    // create new controller for ongoing async call\n    const ac = new AbortController();\n    abortController.current = ac;\n    // pass down abort signal and received arguments\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    return asyncFn(ac.signal, ...args).finally(() => {\n      // unset ref uf the call is last\n      if (abortController.current === ac) {\n        abortController.current = undefined;\n      }\n    });\n  };\n  const [state, asyncActions, asyncMeta] = useAsync(fn, initialValue);\n  return [state, useMemo(() => {\n    const actions = {\n      reset: () => {\n        actions.abort();\n        asyncActions.reset();\n      },\n      abort: () => {\n        abortController.current?.abort();\n      }\n    };\n    return {\n      ...asyncActions,\n      ...actions\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []), {\n    ...asyncMeta,\n    abortController: abortController.current\n  }];\n}","map":{"version":3,"names":["useMemo","useRef","useAsync","useAsyncAbortable","asyncFn","initialValue","abortController","fn","current","abort","ac","AbortController","_len","arguments","length","args","Array","_key","signal","finally","undefined","state","asyncActions","asyncMeta","actions","reset"],"sources":["C:/Users/trs_user/Documents/my/bntu-library/node_modules/@react-hookz/web/esm/useAsyncAbortable/index.js"],"sourcesContent":["import { useMemo, useRef } from 'react';\nimport { useAsync } from '../useAsync';\n/**\n * Like `useAsync`, but also provides `AbortSignal` as the first argument to the async function.\n *\n * @param asyncFn Function that returns a promise.\n * @param initialValue Value that will be set on initialisation before the async function is\n * executed.\n */\nexport function useAsyncAbortable(asyncFn, initialValue) {\n    const abortController = useRef();\n    const fn = async (...args) => {\n        // abort previous async\n        abortController.current?.abort();\n        // create new controller for ongoing async call\n        const ac = new AbortController();\n        abortController.current = ac;\n        // pass down abort signal and received arguments\n        return asyncFn(ac.signal, ...args).finally(() => {\n            // unset ref uf the call is last\n            if (abortController.current === ac) {\n                abortController.current = undefined;\n            }\n        });\n    };\n    const [state, asyncActions, asyncMeta] = useAsync(fn, initialValue);\n    return [\n        state,\n        useMemo(() => {\n            const actions = {\n                reset: () => {\n                    actions.abort();\n                    asyncActions.reset();\n                },\n                abort: () => {\n                    abortController.current?.abort();\n                },\n            };\n            return {\n                ...asyncActions,\n                ...actions,\n            };\n            // eslint-disable-next-line react-hooks/exhaustive-deps\n        }, []),\n        { ...asyncMeta, abortController: abortController.current },\n    ];\n}\n"],"mappings":"AAAA,SAASA,OAAO,EAAEC,MAAM,QAAQ,OAAO;AACvC,SAASC,QAAQ,QAAQ,aAAa;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,iBAAiBA,CAACC,OAAO,EAAEC,YAAY,EAAE;EACrD,MAAMC,eAAe,GAAGL,MAAM,EAAE;EAChC,MAAMM,EAAE,GAAG,eAAAA,CAAA,EAAmB;IAC1B;IACAD,eAAe,CAACE,OAAO,EAAEC,KAAK,EAAE;IAChC;IACA,MAAMC,EAAE,GAAG,IAAIC,eAAe,EAAE;IAChCL,eAAe,CAACE,OAAO,GAAGE,EAAE;IAC5B;IAAA,SAAAE,IAAA,GAAAC,SAAA,CAAAC,MAAA,EANiBC,IAAI,OAAAC,KAAA,CAAAJ,IAAA,GAAAK,IAAA,MAAAA,IAAA,GAAAL,IAAA,EAAAK,IAAA;MAAJF,IAAI,CAAAE,IAAA,IAAAJ,SAAA,CAAAI,IAAA;IAAA;IAOrB,OAAOb,OAAO,CAACM,EAAE,CAACQ,MAAM,EAAE,GAAGH,IAAI,CAAC,CAACI,OAAO,CAAC,MAAM;MAC7C;MACA,IAAIb,eAAe,CAACE,OAAO,KAAKE,EAAE,EAAE;QAChCJ,eAAe,CAACE,OAAO,GAAGY,SAAS;MACvC;IACJ,CAAC,CAAC;EACN,CAAC;EACD,MAAM,CAACC,KAAK,EAAEC,YAAY,EAAEC,SAAS,CAAC,GAAGrB,QAAQ,CAACK,EAAE,EAAEF,YAAY,CAAC;EACnE,OAAO,CACHgB,KAAK,EACLrB,OAAO,CAAC,MAAM;IACV,MAAMwB,OAAO,GAAG;MACZC,KAAK,EAAEA,CAAA,KAAM;QACTD,OAAO,CAACf,KAAK,EAAE;QACfa,YAAY,CAACG,KAAK,EAAE;MACxB,CAAC;MACDhB,KAAK,EAAEA,CAAA,KAAM;QACTH,eAAe,CAACE,OAAO,EAAEC,KAAK,EAAE;MACpC;IACJ,CAAC;IACD,OAAO;MACH,GAAGa,YAAY;MACf,GAAGE;IACP,CAAC;IACD;EACJ,CAAC,EAAE,EAAE,CAAC,EACN;IAAE,GAAGD,SAAS;IAAEjB,eAAe,EAAEA,eAAe,CAACE;EAAQ,CAAC,CAC7D;AACL"},"metadata":{},"sourceType":"module","externalDependencies":[]}