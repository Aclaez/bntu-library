{"ast":null,"code":"import { useMemo, useRef } from 'react';\n/**\n * Like `useRef`, but it returns immutable ref that contains actual value.\n *\n * @param value\n */\nexport function useSyncedRef(value) {\n  var ref = useRef(value);\n  ref.current = value;\n  return useMemo(function () {\n    return Object.freeze({\n      get current() {\n        return ref.current;\n      }\n    });\n  }, []);\n}","map":{"version":3,"names":["useMemo","useRef","useSyncedRef","value","ref","current","Object","freeze"],"sources":["C:/Users/trs_user/Documents/my/bntu-library/node_modules/@react-hookz/web/esm/useSyncedRef/index.js"],"sourcesContent":["import { useMemo, useRef } from 'react';\n/**\n * Like `useRef`, but it returns immutable ref that contains actual value.\n *\n * @param value\n */\nexport function useSyncedRef(value) {\n    const ref = useRef(value);\n    ref.current = value;\n    return useMemo(() => Object.freeze({\n        get current() {\n            return ref.current;\n        },\n    }), []);\n}\n"],"mappings":"AAAA,SAASA,OAAO,EAAEC,MAAM,QAAQ,OAAO;AACvC;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,YAAYA,CAACC,KAAK,EAAE;EAChC,IAAMC,GAAG,GAAGH,MAAM,CAACE,KAAK,CAAC;EACzBC,GAAG,CAACC,OAAO,GAAGF,KAAK;EACnB,OAAOH,OAAO,CAAC;IAAA,OAAMM,MAAM,CAACC,MAAM,CAAC;MAC/B,IAAIF,OAAOA,CAAA,EAAG;QACV,OAAOD,GAAG,CAACC,OAAO;MACtB;IACJ,CAAC,CAAC;EAAA,GAAE,EAAE,CAAC;AACX"},"metadata":{},"sourceType":"module","externalDependencies":[]}