{"ast":null,"code":"import { useMemo } from 'react';\nimport { useSyncedRef } from '../useSyncedRef';\nimport { useEventListener } from '../useEventListener';\nimport { isBrowser } from \"../util/const.js\";\nimport { yieldFalse, yieldTrue } from \"../util/misc.js\";\nvar createKeyPredicate = function createKeyPredicate(keyFilter) {\n  if (typeof keyFilter === 'function') return keyFilter;\n  if (typeof keyFilter === 'string') return function (ev) {\n    return ev.key === keyFilter;\n  };\n  return keyFilter ? yieldTrue : yieldFalse;\n};\nvar WINDOW_OR_NULL = isBrowser ? window : null;\n/**\n * Invokes a callback when a keyboard event occurs on the chosen target element.\n *\n * @param keyOrPredicate Filters key presses on which `callback` is invoked.\n * @param callback Function to call when a key is pressed and `keyOrPredicate` matches positive.\n * @param deps Dependencies list that is passed to the underlying `useMemo`.\n * @param options Hook options.\n */\nexport function useKeyboardEvent(keyOrPredicate, callback, deps) {\n  var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n  var _options$event = options.event,\n    event = _options$event === void 0 ? 'keydown' : _options$event,\n    _options$target = options.target,\n    target = _options$target === void 0 ? WINDOW_OR_NULL : _options$target,\n    eventOptions = options.eventOptions;\n  var cbRef = useSyncedRef(callback);\n  var handler = useMemo(function () {\n    var predicate = createKeyPredicate(keyOrPredicate);\n    return function kbEventHandler(ev) {\n      if (predicate(ev)) {\n        cbRef.current.call(this, ev);\n      }\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, deps);\n  useEventListener(target, event, handler, eventOptions);\n}","map":{"version":3,"names":["useMemo","useSyncedRef","useEventListener","isBrowser","yieldFalse","yieldTrue","createKeyPredicate","keyFilter","ev","key","WINDOW_OR_NULL","window","useKeyboardEvent","keyOrPredicate","callback","deps","options","arguments","length","undefined","_options$event","event","_options$target","target","eventOptions","cbRef","handler","predicate","kbEventHandler","current","call"],"sources":["C:/Users/trs_user/Documents/my/bntu-library/node_modules/@react-hookz/web/esm/useKeyboardEvent/index.js"],"sourcesContent":["import { useMemo } from 'react';\nimport { useSyncedRef } from '../useSyncedRef';\nimport { useEventListener } from '../useEventListener';\nimport { isBrowser } from \"../util/const.js\";\nimport { yieldFalse, yieldTrue } from \"../util/misc.js\";\nconst createKeyPredicate = (keyFilter) => {\n    if (typeof keyFilter === 'function')\n        return keyFilter;\n    if (typeof keyFilter === 'string')\n        return (ev) => ev.key === keyFilter;\n    return keyFilter ? yieldTrue : yieldFalse;\n};\nconst WINDOW_OR_NULL = isBrowser ? window : null;\n/**\n * Invokes a callback when a keyboard event occurs on the chosen target element.\n *\n * @param keyOrPredicate Filters key presses on which `callback` is invoked.\n * @param callback Function to call when a key is pressed and `keyOrPredicate` matches positive.\n * @param deps Dependencies list that is passed to the underlying `useMemo`.\n * @param options Hook options.\n */\nexport function useKeyboardEvent(keyOrPredicate, callback, deps, options = {}) {\n    const { event = 'keydown', target = WINDOW_OR_NULL, eventOptions } = options;\n    const cbRef = useSyncedRef(callback);\n    const handler = useMemo(() => {\n        const predicate = createKeyPredicate(keyOrPredicate);\n        return function kbEventHandler(ev) {\n            if (predicate(ev)) {\n                cbRef.current.call(this, ev);\n            }\n        };\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, deps);\n    useEventListener(target, event, handler, eventOptions);\n}\n"],"mappings":"AAAA,SAASA,OAAO,QAAQ,OAAO;AAC/B,SAASC,YAAY,QAAQ,iBAAiB;AAC9C,SAASC,gBAAgB,QAAQ,qBAAqB;AACtD,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,SAASC,UAAU,EAAEC,SAAS,QAAQ,iBAAiB;AACvD,IAAMC,kBAAkB,GAAG,SAArBA,kBAAkBA,CAAIC,SAAS,EAAK;EACtC,IAAI,OAAOA,SAAS,KAAK,UAAU,EAC/B,OAAOA,SAAS;EACpB,IAAI,OAAOA,SAAS,KAAK,QAAQ,EAC7B,OAAO,UAACC,EAAE;IAAA,OAAKA,EAAE,CAACC,GAAG,KAAKF,SAAS;EAAA;EACvC,OAAOA,SAAS,GAAGF,SAAS,GAAGD,UAAU;AAC7C,CAAC;AACD,IAAMM,cAAc,GAAGP,SAAS,GAAGQ,MAAM,GAAG,IAAI;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,gBAAgBA,CAACC,cAAc,EAAEC,QAAQ,EAAEC,IAAI,EAAgB;EAAA,IAAdC,OAAO,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,CAAC,CAAC;EACzE,IAAAG,cAAA,GAAqEJ,OAAO,CAApEK,KAAK;IAALA,KAAK,GAAAD,cAAA,cAAG,SAAS,GAAAA,cAAA;IAAAE,eAAA,GAA4CN,OAAO,CAAjDO,MAAM;IAANA,MAAM,GAAAD,eAAA,cAAGZ,cAAc,GAAAY,eAAA;IAAEE,YAAY,GAAKR,OAAO,CAAxBQ,YAAY;EAChE,IAAMC,KAAK,GAAGxB,YAAY,CAACa,QAAQ,CAAC;EACpC,IAAMY,OAAO,GAAG1B,OAAO,CAAC,YAAM;IAC1B,IAAM2B,SAAS,GAAGrB,kBAAkB,CAACO,cAAc,CAAC;IACpD,OAAO,SAASe,cAAcA,CAACpB,EAAE,EAAE;MAC/B,IAAImB,SAAS,CAACnB,EAAE,CAAC,EAAE;QACfiB,KAAK,CAACI,OAAO,CAACC,IAAI,CAAC,IAAI,EAAEtB,EAAE,CAAC;MAChC;IACJ,CAAC;IACD;EACJ,CAAC,EAAEO,IAAI,CAAC;EACRb,gBAAgB,CAACqB,MAAM,EAAEF,KAAK,EAAEK,OAAO,EAAEF,YAAY,CAAC;AAC1D"},"metadata":{},"sourceType":"module","externalDependencies":[]}