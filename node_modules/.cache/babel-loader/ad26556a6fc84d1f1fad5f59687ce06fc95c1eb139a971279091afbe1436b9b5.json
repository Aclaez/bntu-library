{"ast":null,"code":"import _objectSpread from \"C:/Users/trs_user/Documents/my/bntu-library/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _slicedToArray from \"C:/Users/trs_user/Documents/my/bntu-library/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _regeneratorRuntime from \"C:/Users/trs_user/Documents/my/bntu-library/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"C:/Users/trs_user/Documents/my/bntu-library/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { useMemo, useRef } from 'react';\nimport { useAsync } from '../useAsync';\n/**\n * Like `useAsync`, but also provides `AbortSignal` as the first argument to the async function.\n *\n * @param asyncFn Function that returns a promise.\n * @param initialValue Value that will be set on initialisation before the async function is\n * executed.\n */\nexport function useAsyncAbortable(asyncFn, initialValue) {\n  var abortController = useRef();\n  var fn = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n      var _abortController$curr;\n      var ac,\n        _len,\n        args,\n        _key,\n        _args = arguments;\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) switch (_context.prev = _context.next) {\n          case 0:\n            // abort previous async\n            (_abortController$curr = abortController.current) === null || _abortController$curr === void 0 ? void 0 : _abortController$curr.abort();\n            // create new controller for ongoing async call\n            ac = new AbortController();\n            abortController.current = ac;\n            // pass down abort signal and received arguments\n            for (_len = _args.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n              args[_key] = _args[_key];\n            }\n            return _context.abrupt(\"return\", asyncFn.apply(void 0, [ac.signal].concat(args)).finally(function () {\n              // unset ref uf the call is last\n              if (abortController.current === ac) {\n                abortController.current = undefined;\n              }\n            }));\n          case 5:\n          case \"end\":\n            return _context.stop();\n        }\n      }, _callee);\n    }));\n    return function fn() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  var _useAsync = useAsync(fn, initialValue),\n    _useAsync2 = _slicedToArray(_useAsync, 3),\n    state = _useAsync2[0],\n    asyncActions = _useAsync2[1],\n    asyncMeta = _useAsync2[2];\n  return [state, useMemo(function () {\n    var actions = {\n      reset: function reset() {\n        actions.abort();\n        asyncActions.reset();\n      },\n      abort: function abort() {\n        var _abortController$curr2;\n        (_abortController$curr2 = abortController.current) === null || _abortController$curr2 === void 0 ? void 0 : _abortController$curr2.abort();\n      }\n    };\n    return _objectSpread(_objectSpread({}, asyncActions), actions);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []), _objectSpread(_objectSpread({}, asyncMeta), {}, {\n    abortController: abortController.current\n  })];\n}","map":{"version":3,"names":["useMemo","useRef","useAsync","useAsyncAbortable","asyncFn","initialValue","abortController","fn","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_abortController$curr","ac","_len","args","_key","_args","arguments","wrap","_callee$","_context","prev","next","current","abort","AbortController","length","Array","abrupt","apply","signal","concat","finally","undefined","stop","_useAsync","_useAsync2","_slicedToArray","state","asyncActions","asyncMeta","actions","reset","_abortController$curr2","_objectSpread"],"sources":["C:/Users/trs_user/Documents/my/bntu-library/node_modules/@react-hookz/web/esm/useAsyncAbortable/index.js"],"sourcesContent":["import { useMemo, useRef } from 'react';\nimport { useAsync } from '../useAsync';\n/**\n * Like `useAsync`, but also provides `AbortSignal` as the first argument to the async function.\n *\n * @param asyncFn Function that returns a promise.\n * @param initialValue Value that will be set on initialisation before the async function is\n * executed.\n */\nexport function useAsyncAbortable(asyncFn, initialValue) {\n    const abortController = useRef();\n    const fn = async (...args) => {\n        // abort previous async\n        abortController.current?.abort();\n        // create new controller for ongoing async call\n        const ac = new AbortController();\n        abortController.current = ac;\n        // pass down abort signal and received arguments\n        return asyncFn(ac.signal, ...args).finally(() => {\n            // unset ref uf the call is last\n            if (abortController.current === ac) {\n                abortController.current = undefined;\n            }\n        });\n    };\n    const [state, asyncActions, asyncMeta] = useAsync(fn, initialValue);\n    return [\n        state,\n        useMemo(() => {\n            const actions = {\n                reset: () => {\n                    actions.abort();\n                    asyncActions.reset();\n                },\n                abort: () => {\n                    abortController.current?.abort();\n                },\n            };\n            return {\n                ...asyncActions,\n                ...actions,\n            };\n            // eslint-disable-next-line react-hooks/exhaustive-deps\n        }, []),\n        { ...asyncMeta, abortController: abortController.current },\n    ];\n}\n"],"mappings":";;;;AAAA,SAASA,OAAO,EAAEC,MAAM,QAAQ,OAAO;AACvC,SAASC,QAAQ,QAAQ,aAAa;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,iBAAiBA,CAACC,OAAO,EAAEC,YAAY,EAAE;EACrD,IAAMC,eAAe,GAAGL,MAAM,EAAE;EAChC,IAAMM,EAAE;IAAA,IAAAC,IAAA,GAAAC,iBAAA,eAAAC,mBAAA,GAAAC,IAAA,CAAG,SAAAC,QAAA;MAAA,IAAAC,qBAAA;MAAA,IAAAC,EAAA;QAAAC,IAAA;QAAAC,IAAA;QAAAC,IAAA;QAAAC,KAAA,GAAAC,SAAA;MAAA,OAAAT,mBAAA,GAAAU,IAAA,UAAAC,SAAAC,QAAA;QAAA,kBAAAA,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAE,IAAA;UAAA;YACP;YACA,CAAAX,qBAAA,GAAAP,eAAe,CAACmB,OAAO,cAAAZ,qBAAA,uBAAvBA,qBAAA,CAAyBa,KAAK,EAAE;YAChC;YACMZ,EAAE,GAAG,IAAIa,eAAe,EAAE;YAChCrB,eAAe,CAACmB,OAAO,GAAGX,EAAE;YAC5B;YAAA,KAAAC,IAAA,GAAAG,KAAA,CAAAU,MAAA,EANiBZ,IAAI,OAAAa,KAAA,CAAAd,IAAA,GAAAE,IAAA,MAAAA,IAAA,GAAAF,IAAA,EAAAE,IAAA;cAAJD,IAAI,CAAAC,IAAA,IAAAC,KAAA,CAAAD,IAAA;YAAA;YAAA,OAAAK,QAAA,CAAAQ,MAAA,WAOd1B,OAAO,CAAA2B,KAAA,UAACjB,EAAE,CAACkB,MAAM,EAAAC,MAAA,CAAKjB,IAAI,EAAC,CAACkB,OAAO,CAAC,YAAM;cAC7C;cACA,IAAI5B,eAAe,CAACmB,OAAO,KAAKX,EAAE,EAAE;gBAChCR,eAAe,CAACmB,OAAO,GAAGU,SAAS;cACvC;YACJ,CAAC,CAAC;UAAA;UAAA;YAAA,OAAAb,QAAA,CAAAc,IAAA;QAAA;MAAA,GAAAxB,OAAA;IAAA,CACL;IAAA,gBAbKL,EAAEA,CAAA;MAAA,OAAAC,IAAA,CAAAuB,KAAA,OAAAZ,SAAA;IAAA;EAAA,GAaP;EACD,IAAAkB,SAAA,GAAyCnC,QAAQ,CAACK,EAAE,EAAEF,YAAY,CAAC;IAAAiC,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAA5DG,KAAK,GAAAF,UAAA;IAAEG,YAAY,GAAAH,UAAA;IAAEI,SAAS,GAAAJ,UAAA;EACrC,OAAO,CACHE,KAAK,EACLxC,OAAO,CAAC,YAAM;IACV,IAAM2C,OAAO,GAAG;MACZC,KAAK,EAAE,SAAAA,MAAA,EAAM;QACTD,OAAO,CAACjB,KAAK,EAAE;QACfe,YAAY,CAACG,KAAK,EAAE;MACxB,CAAC;MACDlB,KAAK,EAAE,SAAAA,MAAA,EAAM;QAAA,IAAAmB,sBAAA;QACT,CAAAA,sBAAA,GAAAvC,eAAe,CAACmB,OAAO,cAAAoB,sBAAA,uBAAvBA,sBAAA,CAAyBnB,KAAK,EAAE;MACpC;IACJ,CAAC;IACD,OAAAoB,aAAA,CAAAA,aAAA,KACOL,YAAY,GACZE,OAAO;IAEd;EACJ,CAAC,EAAE,EAAE,CAAC,EAAAG,aAAA,CAAAA,aAAA,KACDJ,SAAS;IAAEpC,eAAe,EAAEA,eAAe,CAACmB;EAAO,GAC3D;AACL"},"metadata":{},"sourceType":"module","externalDependencies":[]}