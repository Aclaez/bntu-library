{"ast":null,"code":"import { isEqual } from '@react-hookz/deep-equal';\nimport { useCustomCompareMemo } from '../useCustomCompareMemo';\n/**\n * Like useMemo but validates dependency changes using deep equality check instead of reference check.\n *\n * @param factory Function calculating the value to be memoized.\n * @param deps The list of all reactive values referenced inside `factory`.\n * @returns Initially returns the result of calling `factory`. On subsequent renders, it will return\n * the same value, if dependencies haven't changed, or the result of calling `factory` again, if they have changed.\n */\nexport function useDeepCompareMemo(factory, deps) {\n  return useCustomCompareMemo(factory, deps, isEqual);\n}","map":{"version":3,"names":["isEqual","useCustomCompareMemo","useDeepCompareMemo","factory","deps"],"sources":["C:/Users/trs_user/Documents/my/bntu-library/node_modules/@react-hookz/web/esm/useDeepCompareMemo/index.js"],"sourcesContent":["import { isEqual } from '@react-hookz/deep-equal';\nimport { useCustomCompareMemo } from '../useCustomCompareMemo';\n/**\n * Like useMemo but validates dependency changes using deep equality check instead of reference check.\n *\n * @param factory Function calculating the value to be memoized.\n * @param deps The list of all reactive values referenced inside `factory`.\n * @returns Initially returns the result of calling `factory`. On subsequent renders, it will return\n * the same value, if dependencies haven't changed, or the result of calling `factory` again, if they have changed.\n */\nexport function useDeepCompareMemo(factory, deps) {\n    return useCustomCompareMemo(factory, deps, isEqual);\n}\n"],"mappings":"AAAA,SAASA,OAAO,QAAQ,yBAAyB;AACjD,SAASC,oBAAoB,QAAQ,yBAAyB;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,kBAAkBA,CAACC,OAAO,EAAEC,IAAI,EAAE;EAC9C,OAAOH,oBAAoB,CAACE,OAAO,EAAEC,IAAI,EAAEJ,OAAO,CAAC;AACvD"},"metadata":{},"sourceType":"module","externalDependencies":[]}