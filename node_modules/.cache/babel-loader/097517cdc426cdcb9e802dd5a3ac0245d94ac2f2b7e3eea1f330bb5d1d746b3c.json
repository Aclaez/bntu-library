{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\trs_user\\\\Documents\\\\my\\\\bntu-library\\\\src\\\\variables\\\\authors.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const tableColumns = [{\n  Header: \"Автор\",\n  accessor: \"author_display_name\"\n}, {\n  Header: \"Количество публикаций\",\n  accessor: \"works_count\"\n}, {\n  Header: \"h-индекс\",\n  accessor: \"h_index\"\n}, {\n  Header: \"ID Open Alex автора\",\n  accessor: \"author_id\"\n}, {\n  Header: \"Цитирования\",\n  accessor: \"cited_by_count\"\n}, {\n  Header: \"ORCHID\",\n  accessor: \"orcid\"\n}, {\n  Header: \"Аффиляция\",\n  accessor: \"last_known_institution_name\"\n}, {\n  Header: \"ID Open Alex аффиляции\",\n  accessor: \"last_known_institution_id\"\n}, {\n  Header: \"ROR аффиляции\",\n  accessor: \"last_known_institution_ror\"\n}, {\n  Header: \"Код страны\",\n  accessor: \"last_known_institution_country_code\"\n}, {\n  Header: \"Публикации автора\",\n  accessor: \"works_api_url\"\n}, {\n  Header: \"Тип аффиляции\",\n  accessor: \"last_known_institution_type\"\n}, {\n  Header: \"Тематика исследований\",\n  accessor: \"concepts_name\"\n}];\nexport const searchFieldsList = [{\n  id: 1,\n  name: \"Автор\",\n  key: \"display_name.search\"\n}, {\n  id: 2,\n  name: \"Аффиляция\",\n  key: \"last_know_institution.ror\"\n}, {\n  id: 3,\n  name: \"Код страны\",\n  key: \"last_know_institution.country_code\"\n}];\nexport const filtersList = tableColumns.map(item => ({\n  text: item.Header,\n  id: item.accessor\n}));\nconst filtersByDefaultNames = [\"Автор\", \"Количество публикаций\", \"h-индекс\", \"Код страны\"];\nexport const filtersByDefault = filtersList.filter(item => filtersByDefaultNames.some(name => name === item.text));\nexport const getTransformedData = data => data.map(item => {\n  var _item$summary_stats, _item$last_known_inst, _item$last_known_inst2, _item$last_known_inst3, _item$last_known_inst4, _item$last_known_inst5, _item$x_concepts;\n  return {\n    author_id: (item === null || item === void 0 ? void 0 : item.id) && /*#__PURE__*/_jsxDEV(\"a\", {\n      href: item.id,\n      target: \"_blank\",\n      rel: \"noreferrer\",\n      children: item.id\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }, this) || \"-\",\n    author_display_name: (item === null || item === void 0 ? void 0 : item.display_name) || \"-\",\n    works_count: (item === null || item === void 0 ? void 0 : item.works_count) || \"-\",\n    h_index: (item === null || item === void 0 ? void 0 : (_item$summary_stats = item.summary_stats) === null || _item$summary_stats === void 0 ? void 0 : _item$summary_stats.h_index) || \"-\",\n    cited_by_count: (item === null || item === void 0 ? void 0 : item.cited_by_count) || \"-\",\n    orcid: (item === null || item === void 0 ? void 0 : item.orcid) || \"-\",\n    last_known_institution_name: (item === null || item === void 0 ? void 0 : (_item$last_known_inst = item.last_known_institution) === null || _item$last_known_inst === void 0 ? void 0 : _item$last_known_inst.display_name) || \"-\",\n    last_known_institution_id: (item === null || item === void 0 ? void 0 : (_item$last_known_inst2 = item.last_known_institution) === null || _item$last_known_inst2 === void 0 ? void 0 : _item$last_known_inst2.id) || \"-\",\n    last_known_institution_ror: (item === null || item === void 0 ? void 0 : (_item$last_known_inst3 = item.last_known_institution) === null || _item$last_known_inst3 === void 0 ? void 0 : _item$last_known_inst3.ror) || \"-\",\n    last_known_institution_country_code: (item === null || item === void 0 ? void 0 : (_item$last_known_inst4 = item.last_known_institution) === null || _item$last_known_inst4 === void 0 ? void 0 : _item$last_known_inst4.country_code) || \"-\",\n    works_api_url: (item === null || item === void 0 ? void 0 : item.works_api_url) || \"-\",\n    last_known_institution_type: (item === null || item === void 0 ? void 0 : (_item$last_known_inst5 = item.last_known_institution) === null || _item$last_known_inst5 === void 0 ? void 0 : _item$last_known_inst5.type) || \"-\",\n    concepts_name: (item === null || item === void 0 ? void 0 : (_item$x_concepts = item.x_concepts) === null || _item$x_concepts === void 0 ? void 0 : _item$x_concepts.reduce((accumulator, currentValue) => accumulator + (accumulator === '' ? '' : ', ') + currentValue.display_name, '')) || \"-\"\n  };\n});","map":{"version":3,"names":["tableColumns","Header","accessor","searchFieldsList","id","name","key","filtersList","map","item","text","filtersByDefaultNames","filtersByDefault","filter","some","getTransformedData","data","_item$summary_stats","_item$last_known_inst","_item$last_known_inst2","_item$last_known_inst3","_item$last_known_inst4","_item$last_known_inst5","_item$x_concepts","author_id","_jsxDEV","href","target","rel","children","fileName","_jsxFileName","lineNumber","columnNumber","author_display_name","display_name","works_count","h_index","summary_stats","cited_by_count","orcid","last_known_institution_name","last_known_institution","last_known_institution_id","last_known_institution_ror","ror","last_known_institution_country_code","country_code","works_api_url","last_known_institution_type","type","concepts_name","x_concepts","reduce","accumulator","currentValue"],"sources":["C:/Users/trs_user/Documents/my/bntu-library/src/variables/authors.js"],"sourcesContent":["export const tableColumns = [\r\n  {\r\n    Header: \"Автор\",\r\n    accessor: \"author_display_name\",\r\n  },\r\n  {\r\n    Header: \"Количество публикаций\",\r\n    accessor: \"works_count\",\r\n  },\r\n  {\r\n    Header: \"h-индекс\",\r\n    accessor: \"h_index\",\r\n  },\r\n  {\r\n    Header: \"ID Open Alex автора\",\r\n    accessor: \"author_id\",\r\n  },\r\n  {\r\n    Header: \"Цитирования\",\r\n    accessor: \"cited_by_count\",\r\n  },\r\n  {\r\n    Header: \"ORCHID\",\r\n    accessor: \"orcid\",\r\n  },\r\n  {\r\n    Header: \"Аффиляция\",\r\n    accessor: \"last_known_institution_name\",\r\n  },\r\n  {\r\n    Header: \"ID Open Alex аффиляции\",\r\n    accessor: \"last_known_institution_id\",\r\n  },\r\n  {\r\n    Header: \"ROR аффиляции\",\r\n    accessor: \"last_known_institution_ror\",\r\n  },\r\n  {\r\n    Header: \"Код страны\",\r\n    accessor: \"last_known_institution_country_code\",\r\n  },\r\n  {\r\n    Header: \"Публикации автора\",\r\n    accessor: \"works_api_url\",\r\n  },\r\n  {\r\n    Header: \"Тип аффиляции\",\r\n    accessor: \"last_known_institution_type\",\r\n  },\r\n  {\r\n    Header: \"Тематика исследований\",\r\n    accessor: \"concepts_name\",\r\n  },\r\n];\r\n\r\nexport const searchFieldsList = [\r\n  { id: 1, name: \"Автор\", key: \"display_name.search\" },\r\n  { id: 2, name: \"Аффиляция\", key: \"last_know_institution.ror\" },\r\n  { id: 3, name: \"Код страны\", key: \"last_know_institution.country_code\" },\r\n];\r\n\r\nexport const filtersList = tableColumns.map((item) => ({\r\n  text: item.Header,\r\n  id: item.accessor,\r\n}));\r\n\r\nconst filtersByDefaultNames = [\r\n  \"Автор\",\r\n  \"Количество публикаций\",\r\n  \"h-индекс\",\r\n  \"Код страны\",\r\n];\r\n\r\nexport const filtersByDefault = filtersList.filter((item) =>\r\n  filtersByDefaultNames.some((name) => name === item.text)\r\n);\r\n\r\nexport const getTransformedData = (data) =>\r\n  data.map((item) => ({\r\n    author_id:\r\n      (item?.id && (\r\n        <a href={item.id} target=\"_blank\" rel=\"noreferrer\">\r\n          {item.id}\r\n        </a>\r\n      )) ||\r\n      \"-\",\r\n    author_display_name: item?.display_name || \"-\",\r\n    works_count: item?.works_count || \"-\",\r\n    h_index: item?.summary_stats?.h_index || \"-\",\r\n    cited_by_count: item?.cited_by_count || \"-\",\r\n    orcid: item?.orcid || \"-\",\r\n    last_known_institution_name: item?.last_known_institution?.display_name || \"-\",\r\n    last_known_institution_id: item?.last_known_institution?.id || \"-\",\r\n    last_known_institution_ror: item?.last_known_institution?.ror || \"-\",\r\n    last_known_institution_country_code: item?.last_known_institution?.country_code || \"-\",\r\n    works_api_url: item?.works_api_url || \"-\",\r\n    last_known_institution_type: item?.last_known_institution?.type || \"-\",\r\n    concepts_name: item?.x_concepts?.reduce((accumulator, currentValue) => accumulator + (accumulator === '' ? '' : ', ') + currentValue.display_name, '') || \"-\",\r\n  }));"],"mappings":";;AAAA,OAAO,MAAMA,YAAY,GAAG,CAC1B;EACEC,MAAM,EAAE,OAAO;EACfC,QAAQ,EAAE;AACZ,CAAC,EACD;EACED,MAAM,EAAE,uBAAuB;EAC/BC,QAAQ,EAAE;AACZ,CAAC,EACD;EACED,MAAM,EAAE,UAAU;EAClBC,QAAQ,EAAE;AACZ,CAAC,EACD;EACED,MAAM,EAAE,qBAAqB;EAC7BC,QAAQ,EAAE;AACZ,CAAC,EACD;EACED,MAAM,EAAE,aAAa;EACrBC,QAAQ,EAAE;AACZ,CAAC,EACD;EACED,MAAM,EAAE,QAAQ;EAChBC,QAAQ,EAAE;AACZ,CAAC,EACD;EACED,MAAM,EAAE,WAAW;EACnBC,QAAQ,EAAE;AACZ,CAAC,EACD;EACED,MAAM,EAAE,wBAAwB;EAChCC,QAAQ,EAAE;AACZ,CAAC,EACD;EACED,MAAM,EAAE,eAAe;EACvBC,QAAQ,EAAE;AACZ,CAAC,EACD;EACED,MAAM,EAAE,YAAY;EACpBC,QAAQ,EAAE;AACZ,CAAC,EACD;EACED,MAAM,EAAE,mBAAmB;EAC3BC,QAAQ,EAAE;AACZ,CAAC,EACD;EACED,MAAM,EAAE,eAAe;EACvBC,QAAQ,EAAE;AACZ,CAAC,EACD;EACED,MAAM,EAAE,uBAAuB;EAC/BC,QAAQ,EAAE;AACZ,CAAC,CACF;AAED,OAAO,MAAMC,gBAAgB,GAAG,CAC9B;EAAEC,EAAE,EAAE,CAAC;EAAEC,IAAI,EAAE,OAAO;EAAEC,GAAG,EAAE;AAAsB,CAAC,EACpD;EAAEF,EAAE,EAAE,CAAC;EAAEC,IAAI,EAAE,WAAW;EAAEC,GAAG,EAAE;AAA4B,CAAC,EAC9D;EAAEF,EAAE,EAAE,CAAC;EAAEC,IAAI,EAAE,YAAY;EAAEC,GAAG,EAAE;AAAqC,CAAC,CACzE;AAED,OAAO,MAAMC,WAAW,GAAGP,YAAY,CAACQ,GAAG,CAAEC,IAAI,KAAM;EACrDC,IAAI,EAAED,IAAI,CAACR,MAAM;EACjBG,EAAE,EAAEK,IAAI,CAACP;AACX,CAAC,CAAC,CAAC;AAEH,MAAMS,qBAAqB,GAAG,CAC5B,OAAO,EACP,uBAAuB,EACvB,UAAU,EACV,YAAY,CACb;AAED,OAAO,MAAMC,gBAAgB,GAAGL,WAAW,CAACM,MAAM,CAAEJ,IAAI,IACtDE,qBAAqB,CAACG,IAAI,CAAET,IAAI,IAAKA,IAAI,KAAKI,IAAI,CAACC,IAAI,CAAC,CACzD;AAED,OAAO,MAAMK,kBAAkB,GAAIC,IAAI,IACrCA,IAAI,CAACR,GAAG,CAAEC,IAAI;EAAA,IAAAQ,mBAAA,EAAAC,qBAAA,EAAAC,sBAAA,EAAAC,sBAAA,EAAAC,sBAAA,EAAAC,sBAAA,EAAAC,gBAAA;EAAA,OAAM;IAClBC,SAAS,EACN,CAAAf,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEL,EAAE,kBACPqB,OAAA;MAAGC,IAAI,EAAEjB,IAAI,CAACL,EAAG;MAACuB,MAAM,EAAC,QAAQ;MAACC,GAAG,EAAC,YAAY;MAAAC,QAAA,EAC/CpB,IAAI,CAACL;IAAE;MAAA0B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAEX,IACD,GAAG;IACLC,mBAAmB,EAAE,CAAAzB,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAE0B,YAAY,KAAI,GAAG;IAC9CC,WAAW,EAAE,CAAA3B,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAE2B,WAAW,KAAI,GAAG;IACrCC,OAAO,EAAE,CAAA5B,IAAI,aAAJA,IAAI,wBAAAQ,mBAAA,GAAJR,IAAI,CAAE6B,aAAa,cAAArB,mBAAA,uBAAnBA,mBAAA,CAAqBoB,OAAO,KAAI,GAAG;IAC5CE,cAAc,EAAE,CAAA9B,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAE8B,cAAc,KAAI,GAAG;IAC3CC,KAAK,EAAE,CAAA/B,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAE+B,KAAK,KAAI,GAAG;IACzBC,2BAA2B,EAAE,CAAAhC,IAAI,aAAJA,IAAI,wBAAAS,qBAAA,GAAJT,IAAI,CAAEiC,sBAAsB,cAAAxB,qBAAA,uBAA5BA,qBAAA,CAA8BiB,YAAY,KAAI,GAAG;IAC9EQ,yBAAyB,EAAE,CAAAlC,IAAI,aAAJA,IAAI,wBAAAU,sBAAA,GAAJV,IAAI,CAAEiC,sBAAsB,cAAAvB,sBAAA,uBAA5BA,sBAAA,CAA8Bf,EAAE,KAAI,GAAG;IAClEwC,0BAA0B,EAAE,CAAAnC,IAAI,aAAJA,IAAI,wBAAAW,sBAAA,GAAJX,IAAI,CAAEiC,sBAAsB,cAAAtB,sBAAA,uBAA5BA,sBAAA,CAA8ByB,GAAG,KAAI,GAAG;IACpEC,mCAAmC,EAAE,CAAArC,IAAI,aAAJA,IAAI,wBAAAY,sBAAA,GAAJZ,IAAI,CAAEiC,sBAAsB,cAAArB,sBAAA,uBAA5BA,sBAAA,CAA8B0B,YAAY,KAAI,GAAG;IACtFC,aAAa,EAAE,CAAAvC,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEuC,aAAa,KAAI,GAAG;IACzCC,2BAA2B,EAAE,CAAAxC,IAAI,aAAJA,IAAI,wBAAAa,sBAAA,GAAJb,IAAI,CAAEiC,sBAAsB,cAAApB,sBAAA,uBAA5BA,sBAAA,CAA8B4B,IAAI,KAAI,GAAG;IACtEC,aAAa,EAAE,CAAA1C,IAAI,aAAJA,IAAI,wBAAAc,gBAAA,GAAJd,IAAI,CAAE2C,UAAU,cAAA7B,gBAAA,uBAAhBA,gBAAA,CAAkB8B,MAAM,CAAC,CAACC,WAAW,EAAEC,YAAY,KAAKD,WAAW,IAAIA,WAAW,KAAK,EAAE,GAAG,EAAE,GAAG,IAAI,CAAC,GAAGC,YAAY,CAACpB,YAAY,EAAE,EAAE,CAAC,KAAI;EAC5J,CAAC;AAAA,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}