{"ast":null,"code":"/* eslint-disable @typescript-eslint/no-explicit-any */\nimport { useEffect } from 'react';\nimport { truthyAndArrayPredicate } from \"../util/const.js\";\n/**\n * Like `useEffect` but its callback is invoked only if all given conditions match a given predicate.\n *\n * @param callback Function that will be passed to the underlying effect hook.\n * @param deps Dependency list like the one passed to `useEffect`. If not\n * `undefined`, the effect will be triggered when the dependencies change and the given `conditions`\n * satisfy the `predicate`.\n * @param conditions List of conditions.\n * @param predicate Predicate that should be satisfied by every condition in `conditions`. By\n * default, the predicate checks that every condition in `conditions` is truthy.\n * @param effectHook Effect hook that will be used to run `callback`. Must match the type signature\n * of `useEffect`, meaning that the `callback` should be placed as the first argument and the\n * dependency list as second.\n * @param effectHookRestArgs Extra arguments that are passed to the `effectHook` after the\n * `callback` and the dependency list.\n */\nexport function useConditionalEffect(callback, deps, conditions) {\n  let predicate = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : truthyAndArrayPredicate;\n  let effectHook = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : useEffect;\n  for (var _len = arguments.length, effectHookRestArgs = new Array(_len > 5 ? _len - 5 : 0), _key = 5; _key < _len; _key++) {\n    effectHookRestArgs[_key - 5] = arguments[_key];\n  }\n  effectHook(() => {\n    if (predicate(conditions)) {\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n      return callback();\n    }\n  }, deps, ...effectHookRestArgs);\n}","map":{"version":3,"names":["useEffect","truthyAndArrayPredicate","useConditionalEffect","callback","deps","conditions","predicate","arguments","length","undefined","effectHook","_len","effectHookRestArgs","Array","_key"],"sources":["C:/Users/trs_user/Documents/my/bntu-library/node_modules/@react-hookz/web/esm/useConditionalEffect/index.js"],"sourcesContent":["/* eslint-disable @typescript-eslint/no-explicit-any */\nimport { useEffect } from 'react';\nimport { truthyAndArrayPredicate } from \"../util/const.js\";\n/**\n * Like `useEffect` but its callback is invoked only if all given conditions match a given predicate.\n *\n * @param callback Function that will be passed to the underlying effect hook.\n * @param deps Dependency list like the one passed to `useEffect`. If not\n * `undefined`, the effect will be triggered when the dependencies change and the given `conditions`\n * satisfy the `predicate`.\n * @param conditions List of conditions.\n * @param predicate Predicate that should be satisfied by every condition in `conditions`. By\n * default, the predicate checks that every condition in `conditions` is truthy.\n * @param effectHook Effect hook that will be used to run `callback`. Must match the type signature\n * of `useEffect`, meaning that the `callback` should be placed as the first argument and the\n * dependency list as second.\n * @param effectHookRestArgs Extra arguments that are passed to the `effectHook` after the\n * `callback` and the dependency list.\n */\nexport function useConditionalEffect(callback, deps, conditions, predicate = truthyAndArrayPredicate, effectHook = useEffect, ...effectHookRestArgs) {\n    effectHook((() => {\n        if (predicate(conditions)) {\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n            return callback();\n        }\n    }), deps, ...effectHookRestArgs);\n}\n"],"mappings":"AAAA;AACA,SAASA,SAAS,QAAQ,OAAO;AACjC,SAASC,uBAAuB,QAAQ,kBAAkB;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,oBAAoBA,CAACC,QAAQ,EAAEC,IAAI,EAAEC,UAAU,EAAsF;EAAA,IAApFC,SAAS,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAGN,uBAAuB;EAAA,IAAES,UAAU,GAAAH,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAGP,SAAS;EAAA,SAAAW,IAAA,GAAAJ,SAAA,CAAAC,MAAA,EAAKI,kBAAkB,OAAAC,KAAA,CAAAF,IAAA,OAAAA,IAAA,WAAAG,IAAA,MAAAA,IAAA,GAAAH,IAAA,EAAAG,IAAA;IAAlBF,kBAAkB,CAAAE,IAAA,QAAAP,SAAA,CAAAO,IAAA;EAAA;EAC/IJ,UAAU,CAAE,MAAM;IACd,IAAIJ,SAAS,CAACD,UAAU,CAAC,EAAE;MACvB;MACA,OAAOF,QAAQ,EAAE;IACrB;EACJ,CAAC,EAAGC,IAAI,EAAE,GAAGQ,kBAAkB,CAAC;AACpC"},"metadata":{},"sourceType":"module","externalDependencies":[]}