{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\trs_user\\\\Documents\\\\my\\\\bntu-library\\\\src\\\\variables\\\\sources.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const tableColumns = [{\n  Header: \"ID издания\",\n  accessor: \"id\"\n}, {\n  Header: \"Количество цитирований\",\n  accessor: \"cited_by_count\"\n}, {\n  Header: \"ISSN_I\",\n  accessor: \"ids_issn_l\"\n}, {\n  Header: \"Код страны\",\n  accessor: \"country_code\"\n}, {\n  Header: \"ISSN\",\n  accessor: \"ids_issn\"\n}, {\n  Header: \"Тип издания\",\n  accessor: \"type\"\n}, {\n  Header: \"Название издания\",\n  accessor: \"display_name\"\n}, {\n  Header: \"Публикации и цитирования по годам\",\n  accessor: \"counts_by_year\"\n}, {\n  Header: \"Издатель\",\n  accessor: \"host_organization_name\"\n}, {\n  Header: \"Ключевые слова\",\n  accessor: \"concepts_name\"\n}, {\n  Header: \"Количество публикаций\",\n  accessor: \"works_count\"\n}, {\n  Header: \"Публикации\",\n  accessor: \"works_api_url\"\n}];\nexport const searchFieldsList = [{\n  id: 1,\n  name: \"Название издания\",\n  key: \"display_name.search\"\n}, {\n  id: 2,\n  name: \"Код страны\",\n  key: \"country_code\"\n}, {\n  id: 3,\n  name: \"ID издателя\",\n  key: \"host_organization.id\"\n}, {\n  id: 4,\n  name: \"ID издания\",\n  key: \"openalex_id\"\n}, {\n  id: 5,\n  name: \"ISSN\",\n  key: \"issn\"\n}, {\n  id: 6,\n  name: \"Дополнительный ISSN\",\n  key: \"issn\"\n}, {\n  id: 7,\n  name: \"Издатель\",\n  key: \"publisher\"\n}, {\n  id: 8,\n  name: \"ID ключевого слова\",\n  key: \"x_concepts.id\"\n}];\nexport const filtersList = tableColumns.map(item => ({\n  text: item.Header,\n  id: item.accessor\n}));\nconst filtersByDefaultNames = [\"ID издания\", \"Количество цитирований\", \"ISSN_I\", \"Код страны\", \"ISSN\", \"Тип издания\", \"Название издания\", \"Издатель\", \"Ключевые слова\", \"Количество публикаций\", \"Публикации\"];\nexport const filtersByDefault = filtersList.filter(item => filtersByDefaultNames.some(name => name === item.text));\nexport const getTransformedData = data => data.map(item => {\n  var _item$issn, _item$counts_by_year, _item$x_concepts;\n  return {\n    id: (item === null || item === void 0 ? void 0 : item.id) && /*#__PURE__*/_jsxDEV(\"a\", {\n      href: item.id,\n      target: \"_blank\",\n      rel: \"noreferrer\",\n      children: item.id\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }, this) || \"-\",\n    cited_by_count: (item === null || item === void 0 ? void 0 : item.cited_by_count) || \"-\",\n    ids_issn_l: (item === null || item === void 0 ? void 0 : item.issn_l) || \"-\",\n    country_code: (item === null || item === void 0 ? void 0 : item.country_code) || \"-\",\n    ids_issn: (item === null || item === void 0 ? void 0 : (_item$issn = item.issn) === null || _item$issn === void 0 ? void 0 : _item$issn.find(x => x !== undefined)) || \"-\",\n    type: (item === null || item === void 0 ? void 0 : item.type) || \"-\",\n    display_name: (item === null || item === void 0 ? void 0 : item.display_name) || \"-\",\n    counts_by_year: (item === null || item === void 0 ? void 0 : (_item$counts_by_year = item.counts_by_year) === null || _item$counts_by_year === void 0 ? void 0 : _item$counts_by_year.reduce((accumulator, currentValue) => accumulator + (accumulator === '' ? '' : ';') + ' год:' + currentValue.year + \", публикаций:\" + currentValue.works_count + \", цитат:\" + currentValue.cited_by_count, '')) || \"-\",\n    host_organization_name: (item === null || item === void 0 ? void 0 : item.host_organization_name) || \"-\",\n    concepts_name: (item === null || item === void 0 ? void 0 : (_item$x_concepts = item.x_concepts) === null || _item$x_concepts === void 0 ? void 0 : _item$x_concepts.reduce((accumulator, currentValue) => accumulator + (accumulator === '' ? '' : ', ') + currentValue.display_name, '')) || \"-\",\n    works_count: (item === null || item === void 0 ? void 0 : item.works_count) || \"-\",\n    works_api_url: (item === null || item === void 0 ? void 0 : item.works_api_url) || \"-\"\n  };\n});","map":{"version":3,"names":["tableColumns","Header","accessor","searchFieldsList","id","name","key","filtersList","map","item","text","filtersByDefaultNames","filtersByDefault","filter","some","getTransformedData","data","_item$issn","_item$counts_by_year","_item$x_concepts","_jsxDEV","href","target","rel","children","fileName","_jsxFileName","lineNumber","columnNumber","cited_by_count","ids_issn_l","issn_l","country_code","ids_issn","issn","find","x","undefined","type","display_name","counts_by_year","reduce","accumulator","currentValue","year","works_count","host_organization_name","concepts_name","x_concepts","works_api_url"],"sources":["C:/Users/trs_user/Documents/my/bntu-library/src/variables/sources.js"],"sourcesContent":["export const tableColumns = [\r\n  {\r\n    Header: \"ID издания\",\r\n    accessor: \"id\",\r\n  },\r\n  {\r\n    Header: \"Количество цитирований\",\r\n    accessor: \"cited_by_count\",\r\n  },\r\n  {\r\n    Header: \"ISSN_I\",\r\n    accessor: \"ids_issn_l\",\r\n  },\r\n  {\r\n    Header: \"Код страны\",\r\n    accessor: \"country_code\",\r\n  },\r\n  {\r\n    Header: \"ISSN\",\r\n    accessor: \"ids_issn\",\r\n  },\r\n  {\r\n    Header: \"Тип издания\",\r\n    accessor: \"type\",\r\n  },\r\n  {\r\n    Header: \"Название издания\",\r\n    accessor: \"display_name\",\r\n  },\r\n  {\r\n    Header: \"Публикации и цитирования по годам\",\r\n    accessor: \"counts_by_year\",\r\n  },\r\n  {\r\n    Header: \"Издатель\",\r\n    accessor: \"host_organization_name\",\r\n  },\r\n  {\r\n    Header: \"Ключевые слова\",\r\n    accessor: \"concepts_name\",\r\n  },\r\n  {\r\n    Header: \"Количество публикаций\",\r\n    accessor: \"works_count\",\r\n  },\r\n  {\r\n    Header: \"Публикации\",\r\n    accessor: \"works_api_url\",\r\n  },\r\n];\r\n\r\nexport const searchFieldsList = [\r\n  { id: 1, name: \"Название издания\", key: \"display_name.search\" },\r\n  { id: 2, name: \"Код страны\", key: \"country_code\" },\r\n  { id: 3, name: \"ID издателя\", key: \"host_organization.id\" },\r\n  { id: 4, name: \"ID издания\", key: \"openalex_id\" },\r\n  { id: 5, name: \"ISSN\", key: \"issn\" },\r\n  { id: 6, name: \"Дополнительный ISSN\", key: \"issn\" },\r\n  { id: 7, name: \"Издатель\", key: \"publisher\" },\r\n  { id: 8, name: \"ID ключевого слова\", key: \"x_concepts.id\" },\r\n];\r\n\r\nexport const filtersList = tableColumns.map((item) => ({\r\n  text: item.Header,\r\n  id: item.accessor,\r\n}));\r\n\r\nconst filtersByDefaultNames = [\r\n  \"ID издания\",\r\n  \"Количество цитирований\",\r\n  \"ISSN_I\",\r\n  \"Код страны\",\r\n  \"ISSN\",\r\n  \"Тип издания\",\r\n  \"Название издания\",\r\n  \"Издатель\",\r\n  \"Ключевые слова\",\r\n  \"Количество публикаций\",\r\n  \"Публикации\",\r\n];\r\n\r\nexport const filtersByDefault = filtersList.filter((item) =>\r\n  filtersByDefaultNames.some((name) => name === item.text)\r\n);\r\n\r\nexport const getTransformedData = (data) =>\r\n  data.map((item) => ({\r\n    id:\r\n      (item?.id && (\r\n        <a href={item.id} target=\"_blank\" rel=\"noreferrer\">\r\n          {item.id}\r\n        </a>\r\n      )) ||\r\n      \"-\",\r\n    cited_by_count: item?.cited_by_count || \"-\",\r\n    ids_issn_l: item?.issn_l || \"-\",\r\n    country_code: item?.country_code || \"-\",\r\n    ids_issn: item?.issn?.find(x=>x!==undefined) || \"-\",\r\n    type: item?.type || \"-\",\r\n    display_name: item?.display_name || \"-\",\r\n    counts_by_year: item?.counts_by_year?.reduce((accumulator, currentValue) => accumulator + (accumulator === '' ? '' : ';') + ' год:' + currentValue.year + \", публикаций:\" + currentValue.works_count + \", цитат:\" + currentValue.cited_by_count, '') || \"-\",\r\n    host_organization_name: item?.host_organization_name || \"-\",\r\n    concepts_name: item?.x_concepts?.reduce((accumulator, currentValue) => accumulator + (accumulator === '' ? '' : ', ') + currentValue.display_name, '') || \"-\",\r\n    works_count: item?.works_count || \"-\",\r\n    works_api_url: item?.works_api_url || \"-\",\r\n  }));"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}