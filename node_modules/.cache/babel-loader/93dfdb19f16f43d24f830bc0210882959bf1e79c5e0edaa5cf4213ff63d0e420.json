{"ast":null,"code":"import { useState } from 'react';\nimport { useRafCallback } from '../useRafCallback';\nimport { useUnmountEffect } from '../useUnmountEffect';\n/**\n * Like `React.useState`, but state is only updated within animation frame.\n */\nexport function useRafState(initialState) {\n  const [state, innerSetState] = useState(initialState);\n  const [setState, cancelRaf] = useRafCallback(innerSetState);\n  useUnmountEffect(cancelRaf);\n  return [state, setState];\n}","map":{"version":3,"names":["useState","useRafCallback","useUnmountEffect","useRafState","initialState","state","innerSetState","setState","cancelRaf"],"sources":["C:/Users/trs_user/Documents/my/bntu-library/node_modules/@react-hookz/web/esm/useRafState/index.js"],"sourcesContent":["import { useState } from 'react';\nimport { useRafCallback } from '../useRafCallback';\nimport { useUnmountEffect } from '../useUnmountEffect';\n/**\n * Like `React.useState`, but state is only updated within animation frame.\n */\nexport function useRafState(initialState) {\n    const [state, innerSetState] = useState(initialState);\n    const [setState, cancelRaf] = useRafCallback(innerSetState);\n    useUnmountEffect(cancelRaf);\n    return [state, setState];\n}\n"],"mappings":"AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,SAASC,cAAc,QAAQ,mBAAmB;AAClD,SAASC,gBAAgB,QAAQ,qBAAqB;AACtD;AACA;AACA;AACA,OAAO,SAASC,WAAWA,CAACC,YAAY,EAAE;EACtC,MAAM,CAACC,KAAK,EAAEC,aAAa,CAAC,GAAGN,QAAQ,CAACI,YAAY,CAAC;EACrD,MAAM,CAACG,QAAQ,EAAEC,SAAS,CAAC,GAAGP,cAAc,CAACK,aAAa,CAAC;EAC3DJ,gBAAgB,CAACM,SAAS,CAAC;EAC3B,OAAO,CAACH,KAAK,EAAEE,QAAQ,CAAC;AAC5B"},"metadata":{},"sourceType":"module","externalDependencies":[]}