{"ast":null,"code":"import { useEffect, useState } from 'react';\nimport { isBrowser } from \"../util/const.js\";\nconst queriesMap = new Map();\nconst createQueryEntry = query => {\n  const mql = matchMedia(query);\n  const dispatchers = new Set();\n  const listener = () => {\n    dispatchers.forEach(d => d(mql.matches));\n  };\n  if (mql.addEventListener) mql.addEventListener('change', listener, {\n    passive: true\n  });else mql.addListener(listener);\n  return {\n    mql,\n    dispatchers,\n    listener\n  };\n};\nconst querySubscribe = (query, setState) => {\n  let entry = queriesMap.get(query);\n  if (!entry) {\n    entry = createQueryEntry(query);\n    queriesMap.set(query, entry);\n  }\n  entry.dispatchers.add(setState);\n  setState(entry.mql.matches);\n};\nconst queryUnsubscribe = (query, setState) => {\n  const entry = queriesMap.get(query);\n  // else path is impossible to test in normal situation\n  /* istanbul ignore else */\n  if (entry) {\n    const {\n      mql,\n      dispatchers,\n      listener\n    } = entry;\n    dispatchers.delete(setState);\n    if (!dispatchers.size) {\n      queriesMap.delete(query);\n      if (mql.removeEventListener) mql.removeEventListener('change', listener);else mql.removeListener(listener);\n    }\n  }\n};\n/**\n * Tracks the state of CSS media query.\n *\n * @param query CSS media query to track.\n * @param options Hook options:\n * `initializeWithValue` (default: `true`) - Determine media query match state on first render. Setting\n * this to false will make the hook yield `undefined` on first render.\n */\nexport function useMediaQuery(query) {\n  let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  let {\n    initializeWithValue = true\n  } = options;\n  if (!isBrowser) {\n    initializeWithValue = false;\n  }\n  const [state, setState] = useState(() => {\n    if (initializeWithValue) {\n      let entry = queriesMap.get(query);\n      if (!entry) {\n        entry = createQueryEntry(query);\n        queriesMap.set(query, entry);\n      }\n      return entry.mql.matches;\n    }\n  });\n  useEffect(() => {\n    querySubscribe(query, setState);\n    return () => queryUnsubscribe(query, setState);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [query]);\n  return state;\n}","map":{"version":3,"names":["useEffect","useState","isBrowser","queriesMap","Map","createQueryEntry","query","mql","matchMedia","dispatchers","Set","listener","forEach","d","matches","addEventListener","passive","addListener","querySubscribe","setState","entry","get","set","add","queryUnsubscribe","delete","size","removeEventListener","removeListener","useMediaQuery","options","arguments","length","undefined","initializeWithValue","state"],"sources":["C:/Users/trs_user/Documents/my/bntu-library/node_modules/@react-hookz/web/esm/useMediaQuery/index.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { isBrowser } from \"../util/const.js\";\nconst queriesMap = new Map();\nconst createQueryEntry = (query) => {\n    const mql = matchMedia(query);\n    const dispatchers = new Set();\n    const listener = () => {\n        dispatchers.forEach((d) => d(mql.matches));\n    };\n    if (mql.addEventListener)\n        mql.addEventListener('change', listener, { passive: true });\n    else\n        mql.addListener(listener);\n    return {\n        mql,\n        dispatchers,\n        listener,\n    };\n};\nconst querySubscribe = (query, setState) => {\n    let entry = queriesMap.get(query);\n    if (!entry) {\n        entry = createQueryEntry(query);\n        queriesMap.set(query, entry);\n    }\n    entry.dispatchers.add(setState);\n    setState(entry.mql.matches);\n};\nconst queryUnsubscribe = (query, setState) => {\n    const entry = queriesMap.get(query);\n    // else path is impossible to test in normal situation\n    /* istanbul ignore else */\n    if (entry) {\n        const { mql, dispatchers, listener } = entry;\n        dispatchers.delete(setState);\n        if (!dispatchers.size) {\n            queriesMap.delete(query);\n            if (mql.removeEventListener)\n                mql.removeEventListener('change', listener);\n            else\n                mql.removeListener(listener);\n        }\n    }\n};\n/**\n * Tracks the state of CSS media query.\n *\n * @param query CSS media query to track.\n * @param options Hook options:\n * `initializeWithValue` (default: `true`) - Determine media query match state on first render. Setting\n * this to false will make the hook yield `undefined` on first render.\n */\nexport function useMediaQuery(query, options = {}) {\n    let { initializeWithValue = true } = options;\n    if (!isBrowser) {\n        initializeWithValue = false;\n    }\n    const [state, setState] = useState(() => {\n        if (initializeWithValue) {\n            let entry = queriesMap.get(query);\n            if (!entry) {\n                entry = createQueryEntry(query);\n                queriesMap.set(query, entry);\n            }\n            return entry.mql.matches;\n        }\n    });\n    useEffect(() => {\n        querySubscribe(query, setState);\n        return () => queryUnsubscribe(query, setState);\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [query]);\n    return state;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}