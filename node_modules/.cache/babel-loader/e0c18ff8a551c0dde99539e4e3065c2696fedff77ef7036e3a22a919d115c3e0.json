{"ast":null,"code":"import _toConsumableArray from \"C:/Users/trs_user/Documents/my/bntu-library/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\n/* eslint-disable @typescript-eslint/no-explicit-any */\nimport { useEffect, useMemo } from 'react';\nimport { useIsMounted } from '../useIsMounted';\nimport { useSyncedRef } from '../useSyncedRef';\nimport { hasOwnProperty, off, on } from \"../util/misc.js\";\n/**\n *  An HTML element or ref object containing an HTML element.\n *\n * @param target An HTML element or ref object containing an HTML element.\n * @param params Parameters specific to the target element's `addEventListener` method. Commonly\n * something like `[eventName, listener, options]`.\n */\nexport function useEventListener(target) {\n  for (var _len = arguments.length, params = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    params[_key - 1] = arguments[_key];\n  }\n  var isMounted = useIsMounted();\n  // create static event listener\n  var listenerRef = useSyncedRef(params[1]);\n  var eventListener = useMemo(function () {\n    return (\n      // as some event listeners designed to be used through `this`\n      // it is better to make listener a conventional function as it\n      // infers call context\n      // eslint-disable-next-line func-names\n      function () {\n        // normally, such situation should not happen, but better to\n        // have back covered\n        /* istanbul ignore next */\n        if (!isMounted()) return;\n        // we dont care if non-listener provided, simply dont do anything\n        /* istanbul ignore else */\n        for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n          args[_key2] = arguments[_key2];\n        }\n        if (typeof listenerRef.current === 'function') {\n          listenerRef.current.apply(this, args);\n        } else if (typeof listenerRef.current.handleEvent === 'function') {\n          listenerRef.current.handleEvent.apply(this, args);\n        }\n      }\n    );\n  },\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  []);\n  useEffect(function () {\n    var tgt = target && hasOwnProperty(target, 'current') ? target.current : target;\n    if (!tgt) return;\n    var restParams = params.slice(2);\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n    on.apply(void 0, [tgt, params[0], eventListener].concat(_toConsumableArray(restParams)));\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n    return function () {\n      return off.apply(void 0, [tgt, params[0], eventListener].concat(_toConsumableArray(restParams)));\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [target, params[0]]);\n}","map":{"version":3,"names":["useEffect","useMemo","useIsMounted","useSyncedRef","hasOwnProperty","off","on","useEventListener","target","_len","arguments","length","params","Array","_key","isMounted","listenerRef","eventListener","_len2","args","_key2","current","apply","handleEvent","tgt","restParams","slice","concat","_toConsumableArray"],"sources":["C:/Users/trs_user/Documents/my/bntu-library/node_modules/@react-hookz/web/esm/useEventListener/index.js"],"sourcesContent":["/* eslint-disable @typescript-eslint/no-explicit-any */\nimport { useEffect, useMemo } from 'react';\nimport { useIsMounted } from '../useIsMounted';\nimport { useSyncedRef } from '../useSyncedRef';\nimport { hasOwnProperty, off, on } from \"../util/misc.js\";\n/**\n *  An HTML element or ref object containing an HTML element.\n *\n * @param target An HTML element or ref object containing an HTML element.\n * @param params Parameters specific to the target element's `addEventListener` method. Commonly\n * something like `[eventName, listener, options]`.\n */\nexport function useEventListener(target, ...params) {\n    const isMounted = useIsMounted();\n    // create static event listener\n    const listenerRef = useSyncedRef(params[1]);\n    const eventListener = useMemo(() => \n    // as some event listeners designed to be used through `this`\n    // it is better to make listener a conventional function as it\n    // infers call context\n    // eslint-disable-next-line func-names\n    function (...args) {\n        // normally, such situation should not happen, but better to\n        // have back covered\n        /* istanbul ignore next */\n        if (!isMounted())\n            return;\n        // we dont care if non-listener provided, simply dont do anything\n        /* istanbul ignore else */\n        if (typeof listenerRef.current === 'function') {\n            listenerRef.current.apply(this, args);\n        }\n        else if (typeof listenerRef.current.handleEvent === 'function') {\n            listenerRef.current.handleEvent.apply(this, args);\n        }\n    }, \n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    []);\n    useEffect(() => {\n        const tgt = target && hasOwnProperty(target, 'current') ? target.current : target;\n        if (!tgt)\n            return;\n        const restParams = params.slice(2);\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n        on(tgt, params[0], eventListener, ...restParams);\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n        return () => off(tgt, params[0], eventListener, ...restParams);\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [target, params[0]]);\n}\n"],"mappings":";AAAA;AACA,SAASA,SAAS,EAAEC,OAAO,QAAQ,OAAO;AAC1C,SAASC,YAAY,QAAQ,iBAAiB;AAC9C,SAASC,YAAY,QAAQ,iBAAiB;AAC9C,SAASC,cAAc,EAAEC,GAAG,EAAEC,EAAE,QAAQ,iBAAiB;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,gBAAgBA,CAACC,MAAM,EAAa;EAAA,SAAAC,IAAA,GAAAC,SAAA,CAAAC,MAAA,EAARC,MAAM,OAAAC,KAAA,CAAAJ,IAAA,OAAAA,IAAA,WAAAK,IAAA,MAAAA,IAAA,GAAAL,IAAA,EAAAK,IAAA;IAANF,MAAM,CAAAE,IAAA,QAAAJ,SAAA,CAAAI,IAAA;EAAA;EAC9C,IAAMC,SAAS,GAAGb,YAAY,EAAE;EAChC;EACA,IAAMc,WAAW,GAAGb,YAAY,CAACS,MAAM,CAAC,CAAC,CAAC,CAAC;EAC3C,IAAMK,aAAa,GAAGhB,OAAO,CAAC;IAAA;MAC9B;MACA;MACA;MACA;MACA,YAAmB;QACf;QACA;QACA;QACA,IAAI,CAACc,SAAS,EAAE,EACZ;QACJ;QACA;QAAA,SAAAG,KAAA,GAAAR,SAAA,CAAAC,MAAA,EAPSQ,IAAI,OAAAN,KAAA,CAAAK,KAAA,GAAAE,KAAA,MAAAA,KAAA,GAAAF,KAAA,EAAAE,KAAA;UAAJD,IAAI,CAAAC,KAAA,IAAAV,SAAA,CAAAU,KAAA;QAAA;QAQb,IAAI,OAAOJ,WAAW,CAACK,OAAO,KAAK,UAAU,EAAE;UAC3CL,WAAW,CAACK,OAAO,CAACC,KAAK,CAAC,IAAI,EAAEH,IAAI,CAAC;QACzC,CAAC,MACI,IAAI,OAAOH,WAAW,CAACK,OAAO,CAACE,WAAW,KAAK,UAAU,EAAE;UAC5DP,WAAW,CAACK,OAAO,CAACE,WAAW,CAACD,KAAK,CAAC,IAAI,EAAEH,IAAI,CAAC;QACrD;MACJ;IAAC;EAAA;EACD;EACA,EAAE,CAAC;EACHnB,SAAS,CAAC,YAAM;IACZ,IAAMwB,GAAG,GAAGhB,MAAM,IAAIJ,cAAc,CAACI,MAAM,EAAE,SAAS,CAAC,GAAGA,MAAM,CAACa,OAAO,GAAGb,MAAM;IACjF,IAAI,CAACgB,GAAG,EACJ;IACJ,IAAMC,UAAU,GAAGb,MAAM,CAACc,KAAK,CAAC,CAAC,CAAC;IAClC;IACApB,EAAE,CAAAgB,KAAA,UAACE,GAAG,EAAEZ,MAAM,CAAC,CAAC,CAAC,EAAEK,aAAa,EAAAU,MAAA,CAAAC,kBAAA,CAAKH,UAAU,GAAC;IAChD;IACA,OAAO;MAAA,OAAMpB,GAAG,CAAAiB,KAAA,UAACE,GAAG,EAAEZ,MAAM,CAAC,CAAC,CAAC,EAAEK,aAAa,EAAAU,MAAA,CAAAC,kBAAA,CAAKH,UAAU,GAAC;IAAA;IAC9D;EACJ,CAAC,EAAE,CAACjB,MAAM,EAAEI,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;AAC3B"},"metadata":{},"sourceType":"module","externalDependencies":[]}