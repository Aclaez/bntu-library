{"ast":null,"code":"/* eslint-disable @typescript-eslint/no-explicit-any */\nimport { useEffect, useRef } from 'react';\nimport { isBrowser } from \"../util/const.js\";\nimport { basicDepsComparator } from \"../util/misc.js\";\n/**\n * Like `useEffect` but uses provided comparator function to validate dependency changes.\n *\n * @param callback Function that will be passed to the underlying effect hook.\n * @param deps Dependency list like the one passed to `useEffect`.\n * @param comparator Function that compares two dependency arrays,\n * and returns `true` if they're equal.\n * @param effectHook Effect hook that will be used to run\n * `callback`. Must match the type signature of `useEffect`, meaning that the `callback` should be\n * placed as the first argument and the dependency list as second.\n * @param effectHookRestArgs Extra arguments that are passed to the `effectHook`\n * after the `callback` and the dependency list.\n */\nexport function useCustomCompareEffect(callback, deps) {\n  var comparator = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : basicDepsComparator;\n  var effectHook = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : useEffect;\n  var dependencies = useRef();\n  // Effects are not run during SSR, therefore, it makes no sense to invoke the comparator\n  if (dependencies.current === undefined || isBrowser && !comparator(dependencies.current, deps)) {\n    dependencies.current = deps;\n  }\n  for (var _len = arguments.length, effectHookRestArgs = new Array(_len > 4 ? _len - 4 : 0), _key = 4; _key < _len; _key++) {\n    effectHookRestArgs[_key - 4] = arguments[_key];\n  }\n  effectHook.apply(void 0, [callback, dependencies.current].concat(effectHookRestArgs));\n}","map":{"version":3,"names":["useEffect","useRef","isBrowser","basicDepsComparator","useCustomCompareEffect","callback","deps","comparator","arguments","length","undefined","effectHook","dependencies","current","_len","effectHookRestArgs","Array","_key","apply","concat"],"sources":["C:/Users/trs_user/Documents/my/bntu-library/node_modules/@react-hookz/web/esm/useCustomCompareEffect/index.js"],"sourcesContent":["/* eslint-disable @typescript-eslint/no-explicit-any */\nimport { useEffect, useRef } from 'react';\nimport { isBrowser } from \"../util/const.js\";\nimport { basicDepsComparator } from \"../util/misc.js\";\n/**\n * Like `useEffect` but uses provided comparator function to validate dependency changes.\n *\n * @param callback Function that will be passed to the underlying effect hook.\n * @param deps Dependency list like the one passed to `useEffect`.\n * @param comparator Function that compares two dependency arrays,\n * and returns `true` if they're equal.\n * @param effectHook Effect hook that will be used to run\n * `callback`. Must match the type signature of `useEffect`, meaning that the `callback` should be\n * placed as the first argument and the dependency list as second.\n * @param effectHookRestArgs Extra arguments that are passed to the `effectHook`\n * after the `callback` and the dependency list.\n */\nexport function useCustomCompareEffect(callback, deps, comparator = basicDepsComparator, effectHook = useEffect, ...effectHookRestArgs) {\n    const dependencies = useRef();\n    // Effects are not run during SSR, therefore, it makes no sense to invoke the comparator\n    if (dependencies.current === undefined ||\n        (isBrowser && !comparator(dependencies.current, deps))) {\n        dependencies.current = deps;\n    }\n    effectHook(callback, dependencies.current, ...effectHookRestArgs);\n}\n"],"mappings":"AAAA;AACA,SAASA,SAAS,EAAEC,MAAM,QAAQ,OAAO;AACzC,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,SAASC,mBAAmB,QAAQ,iBAAiB;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,sBAAsBA,CAACC,QAAQ,EAAEC,IAAI,EAAmF;EAAA,IAAjFC,UAAU,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAGL,mBAAmB;EAAA,IAAEQ,UAAU,GAAAH,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAGR,SAAS;EAC3G,IAAMY,YAAY,GAAGX,MAAM,EAAE;EAC7B;EACA,IAAIW,YAAY,CAACC,OAAO,KAAKH,SAAS,IACjCR,SAAS,IAAI,CAACK,UAAU,CAACK,YAAY,CAACC,OAAO,EAAEP,IAAI,CAAE,EAAE;IACxDM,YAAY,CAACC,OAAO,GAAGP,IAAI;EAC/B;EAAC,SAAAQ,IAAA,GAAAN,SAAA,CAAAC,MAAA,EAN+GM,kBAAkB,OAAAC,KAAA,CAAAF,IAAA,OAAAA,IAAA,WAAAG,IAAA,MAAAA,IAAA,GAAAH,IAAA,EAAAG,IAAA;IAAlBF,kBAAkB,CAAAE,IAAA,QAAAT,SAAA,CAAAS,IAAA;EAAA;EAOlIN,UAAU,CAAAO,KAAA,UAACb,QAAQ,EAAEO,YAAY,CAACC,OAAO,EAAAM,MAAA,CAAKJ,kBAAkB,EAAC;AACrE"},"metadata":{},"sourceType":"module","externalDependencies":[]}