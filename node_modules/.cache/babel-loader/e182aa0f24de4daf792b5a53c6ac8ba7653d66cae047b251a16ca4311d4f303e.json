{"ast":null,"code":"import { useCallback, useState } from 'react';\nimport { useSyncedRef } from '../useSyncedRef';\nimport { resolveHookState } from \"../util/resolveHookState.js\";\n/**\n * Like `useState`, but can only become `true` or `false`.\n *\n * State setter, in case called without arguments, will change the state to opposite. React\n * synthetic events are ignored by default so state setter can be used as event handler directly,\n * such behaviour can be changed by setting 2nd parameter to `false`.\n */\nexport function useToggle() {\n  let initialState = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n  let ignoreReactEvents = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n  // We don't use useReducer (which would end up with less code), because exposed\n  // action does not provide functional updates feature.\n  // Therefore, we have to create and expose our own state setter with\n  // toggle logic.\n  const [state, setState] = useState(initialState);\n  const ignoreReactEventsRef = useSyncedRef(ignoreReactEvents);\n  return [state, useCallback(nextState => {\n    setState(prevState => {\n      if (nextState === undefined || ignoreReactEventsRef.current && typeof nextState === 'object' && (nextState.constructor.name === 'SyntheticBaseEvent' ||\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access,no-underscore-dangle,@typescript-eslint/no-explicit-any\n      typeof nextState._reactName === 'string')) {\n        return !prevState;\n      }\n      return Boolean(resolveHookState(nextState, prevState));\n    });\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])];\n}","map":{"version":3,"names":["useCallback","useState","useSyncedRef","resolveHookState","useToggle","initialState","arguments","length","undefined","ignoreReactEvents","state","setState","ignoreReactEventsRef","nextState","prevState","current","constructor","name","_reactName","Boolean"],"sources":["C:/Users/trs_user/Documents/my/bntu-library/node_modules/@react-hookz/web/esm/useToggle/index.js"],"sourcesContent":["import { useCallback, useState } from 'react';\nimport { useSyncedRef } from '../useSyncedRef';\nimport { resolveHookState } from \"../util/resolveHookState.js\";\n/**\n * Like `useState`, but can only become `true` or `false`.\n *\n * State setter, in case called without arguments, will change the state to opposite. React\n * synthetic events are ignored by default so state setter can be used as event handler directly,\n * such behaviour can be changed by setting 2nd parameter to `false`.\n */\nexport function useToggle(initialState = false, ignoreReactEvents = true) {\n    // We don't use useReducer (which would end up with less code), because exposed\n    // action does not provide functional updates feature.\n    // Therefore, we have to create and expose our own state setter with\n    // toggle logic.\n    const [state, setState] = useState(initialState);\n    const ignoreReactEventsRef = useSyncedRef(ignoreReactEvents);\n    return [\n        state,\n        useCallback((nextState) => {\n            setState((prevState) => {\n                if (nextState === undefined ||\n                    (ignoreReactEventsRef.current &&\n                        typeof nextState === 'object' &&\n                        (nextState.constructor.name === 'SyntheticBaseEvent' ||\n                            // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access,no-underscore-dangle,@typescript-eslint/no-explicit-any\n                            typeof nextState._reactName === 'string'))) {\n                    return !prevState;\n                }\n                return Boolean(resolveHookState(nextState, prevState));\n            });\n            // eslint-disable-next-line react-hooks/exhaustive-deps\n        }, []),\n    ];\n}\n"],"mappings":"AAAA,SAASA,WAAW,EAAEC,QAAQ,QAAQ,OAAO;AAC7C,SAASC,YAAY,QAAQ,iBAAiB;AAC9C,SAASC,gBAAgB,QAAQ,6BAA6B;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,SAASA,CAAA,EAAiD;EAAA,IAAhDC,YAAY,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,KAAK;EAAA,IAAEG,iBAAiB,GAAAH,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,IAAI;EACpE;EACA;EACA;EACA;EACA,MAAM,CAACI,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAACI,YAAY,CAAC;EAChD,MAAMO,oBAAoB,GAAGV,YAAY,CAACO,iBAAiB,CAAC;EAC5D,OAAO,CACHC,KAAK,EACLV,WAAW,CAAEa,SAAS,IAAK;IACvBF,QAAQ,CAAEG,SAAS,IAAK;MACpB,IAAID,SAAS,KAAKL,SAAS,IACtBI,oBAAoB,CAACG,OAAO,IACzB,OAAOF,SAAS,KAAK,QAAQ,KAC5BA,SAAS,CAACG,WAAW,CAACC,IAAI,KAAK,oBAAoB;MAChD;MACA,OAAOJ,SAAS,CAACK,UAAU,KAAK,QAAQ,CAAE,EAAE;QACpD,OAAO,CAACJ,SAAS;MACrB;MACA,OAAOK,OAAO,CAAChB,gBAAgB,CAACU,SAAS,EAAEC,SAAS,CAAC,CAAC;IAC1D,CAAC,CAAC;IACF;EACJ,CAAC,EAAE,EAAE,CAAC,CACT;AACL"},"metadata":{},"sourceType":"module","externalDependencies":[]}