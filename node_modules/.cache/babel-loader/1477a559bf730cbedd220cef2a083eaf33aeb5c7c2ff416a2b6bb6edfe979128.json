{"ast":null,"code":"import _slicedToArray from \"C:/Users/trs_user/Documents/my/bntu-library/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport { useEffect, useState } from 'react';\nimport { isBrowser } from \"../util/const.js\";\nimport { off, on } from \"../util/misc.js\";\nvar navigator = isBrowser ? window.navigator : undefined;\nvar conn = navigator && (navigator.connection || navigator.mozConnection || navigator.webkitConnection);\nfunction getConnectionState(previousState) {\n  var online = navigator === null || navigator === void 0 ? void 0 : navigator.onLine;\n  var previousOnline = previousState === null || previousState === void 0 ? void 0 : previousState.online;\n  return {\n    online: online,\n    previous: previousOnline,\n    since: online === previousOnline ? previousState === null || previousState === void 0 ? void 0 : previousState.since : new Date(),\n    downlink: conn === null || conn === void 0 ? void 0 : conn.downlink,\n    downlinkMax: conn === null || conn === void 0 ? void 0 : conn.downlinkMax,\n    effectiveType: conn === null || conn === void 0 ? void 0 : conn.effectiveType,\n    rtt: conn === null || conn === void 0 ? void 0 : conn.rtt,\n    saveData: conn === null || conn === void 0 ? void 0 : conn.saveData,\n    type: conn === null || conn === void 0 ? void 0 : conn.type\n  };\n}\n/**\n * Tracks the state of browser's network connection.\n */\nexport function useNetworkState(initialState) {\n  var _useState = useState(initialState !== null && initialState !== void 0 ? initialState : getConnectionState),\n    _useState2 = _slicedToArray(_useState, 2),\n    state = _useState2[0],\n    setState = _useState2[1];\n  useEffect(function () {\n    var handleStateChange = function handleStateChange() {\n      setState(getConnectionState);\n    };\n    on(window, 'online', handleStateChange, {\n      passive: true\n    });\n    on(window, 'offline', handleStateChange, {\n      passive: true\n    });\n    // it is quite hard to test it in jsdom environment maybe will be improved in future\n    /* istanbul ignore next */\n    if (conn) {\n      on(conn, 'change', handleStateChange, {\n        passive: true\n      });\n    }\n    return function () {\n      off(window, 'online', handleStateChange);\n      off(window, 'offline', handleStateChange);\n      /* istanbul ignore next */\n      if (conn) {\n        off(conn, 'change', handleStateChange);\n      }\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  return state;\n}","map":{"version":3,"names":["useEffect","useState","isBrowser","off","on","navigator","window","undefined","conn","connection","mozConnection","webkitConnection","getConnectionState","previousState","online","onLine","previousOnline","previous","since","Date","downlink","downlinkMax","effectiveType","rtt","saveData","type","useNetworkState","initialState","_useState","_useState2","_slicedToArray","state","setState","handleStateChange","passive"],"sources":["C:/Users/trs_user/Documents/my/bntu-library/node_modules/@react-hookz/web/esm/useNetworkState/index.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { isBrowser } from \"../util/const.js\";\nimport { off, on } from \"../util/misc.js\";\nconst navigator = isBrowser ? window.navigator : undefined;\nconst conn = navigator && (navigator.connection || navigator.mozConnection || navigator.webkitConnection);\nfunction getConnectionState(previousState) {\n    const online = navigator?.onLine;\n    const previousOnline = previousState?.online;\n    return {\n        online,\n        previous: previousOnline,\n        since: online === previousOnline ? previousState?.since : new Date(),\n        downlink: conn?.downlink,\n        downlinkMax: conn?.downlinkMax,\n        effectiveType: conn?.effectiveType,\n        rtt: conn?.rtt,\n        saveData: conn?.saveData,\n        type: conn?.type,\n    };\n}\n/**\n * Tracks the state of browser's network connection.\n */\nexport function useNetworkState(initialState) {\n    const [state, setState] = useState(initialState ?? getConnectionState);\n    useEffect(() => {\n        const handleStateChange = () => {\n            setState(getConnectionState);\n        };\n        on(window, 'online', handleStateChange, { passive: true });\n        on(window, 'offline', handleStateChange, { passive: true });\n        // it is quite hard to test it in jsdom environment maybe will be improved in future\n        /* istanbul ignore next */\n        if (conn) {\n            on(conn, 'change', handleStateChange, { passive: true });\n        }\n        return () => {\n            off(window, 'online', handleStateChange);\n            off(window, 'offline', handleStateChange);\n            /* istanbul ignore next */\n            if (conn) {\n                off(conn, 'change', handleStateChange);\n            }\n        };\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n    return state;\n}\n"],"mappings":";AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,SAASC,GAAG,EAAEC,EAAE,QAAQ,iBAAiB;AACzC,IAAMC,SAAS,GAAGH,SAAS,GAAGI,MAAM,CAACD,SAAS,GAAGE,SAAS;AAC1D,IAAMC,IAAI,GAAGH,SAAS,KAAKA,SAAS,CAACI,UAAU,IAAIJ,SAAS,CAACK,aAAa,IAAIL,SAAS,CAACM,gBAAgB,CAAC;AACzG,SAASC,kBAAkBA,CAACC,aAAa,EAAE;EACvC,IAAMC,MAAM,GAAGT,SAAS,aAATA,SAAS,uBAATA,SAAS,CAAEU,MAAM;EAChC,IAAMC,cAAc,GAAGH,aAAa,aAAbA,aAAa,uBAAbA,aAAa,CAAEC,MAAM;EAC5C,OAAO;IACHA,MAAM,EAANA,MAAM;IACNG,QAAQ,EAAED,cAAc;IACxBE,KAAK,EAAEJ,MAAM,KAAKE,cAAc,GAAGH,aAAa,aAAbA,aAAa,uBAAbA,aAAa,CAAEK,KAAK,GAAG,IAAIC,IAAI,EAAE;IACpEC,QAAQ,EAAEZ,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEY,QAAQ;IACxBC,WAAW,EAAEb,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEa,WAAW;IAC9BC,aAAa,EAAEd,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEc,aAAa;IAClCC,GAAG,EAAEf,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEe,GAAG;IACdC,QAAQ,EAAEhB,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEgB,QAAQ;IACxBC,IAAI,EAAEjB,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEiB;EAChB,CAAC;AACL;AACA;AACA;AACA;AACA,OAAO,SAASC,eAAeA,CAACC,YAAY,EAAE;EAC1C,IAAAC,SAAA,GAA0B3B,QAAQ,CAAC0B,YAAY,aAAZA,YAAY,cAAZA,YAAY,GAAIf,kBAAkB,CAAC;IAAAiB,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAA/DG,KAAK,GAAAF,UAAA;IAAEG,QAAQ,GAAAH,UAAA;EACtB7B,SAAS,CAAC,YAAM;IACZ,IAAMiC,iBAAiB,GAAG,SAApBA,iBAAiBA,CAAA,EAAS;MAC5BD,QAAQ,CAACpB,kBAAkB,CAAC;IAChC,CAAC;IACDR,EAAE,CAACE,MAAM,EAAE,QAAQ,EAAE2B,iBAAiB,EAAE;MAAEC,OAAO,EAAE;IAAK,CAAC,CAAC;IAC1D9B,EAAE,CAACE,MAAM,EAAE,SAAS,EAAE2B,iBAAiB,EAAE;MAAEC,OAAO,EAAE;IAAK,CAAC,CAAC;IAC3D;IACA;IACA,IAAI1B,IAAI,EAAE;MACNJ,EAAE,CAACI,IAAI,EAAE,QAAQ,EAAEyB,iBAAiB,EAAE;QAAEC,OAAO,EAAE;MAAK,CAAC,CAAC;IAC5D;IACA,OAAO,YAAM;MACT/B,GAAG,CAACG,MAAM,EAAE,QAAQ,EAAE2B,iBAAiB,CAAC;MACxC9B,GAAG,CAACG,MAAM,EAAE,SAAS,EAAE2B,iBAAiB,CAAC;MACzC;MACA,IAAIzB,IAAI,EAAE;QACNL,GAAG,CAACK,IAAI,EAAE,QAAQ,EAAEyB,iBAAiB,CAAC;MAC1C;IACJ,CAAC;IACD;EACJ,CAAC,EAAE,EAAE,CAAC;EACN,OAAOF,KAAK;AAChB"},"metadata":{},"sourceType":"module","externalDependencies":[]}