{"ast":null,"code":"import _slicedToArray from \"C:/Users/trs_user/Documents/my/bntu-library/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport { useEffect, useState } from 'react';\nimport { isBrowser } from \"../util/const.js\";\nvar queriesMap = new Map();\nvar createQueryEntry = function createQueryEntry(query) {\n  var mql = matchMedia(query);\n  var dispatchers = new Set();\n  var listener = function listener() {\n    dispatchers.forEach(function (d) {\n      return d(mql.matches);\n    });\n  };\n  if (mql.addEventListener) mql.addEventListener('change', listener, {\n    passive: true\n  });else mql.addListener(listener);\n  return {\n    mql: mql,\n    dispatchers: dispatchers,\n    listener: listener\n  };\n};\nvar querySubscribe = function querySubscribe(query, setState) {\n  var entry = queriesMap.get(query);\n  if (!entry) {\n    entry = createQueryEntry(query);\n    queriesMap.set(query, entry);\n  }\n  entry.dispatchers.add(setState);\n  setState(entry.mql.matches);\n};\nvar queryUnsubscribe = function queryUnsubscribe(query, setState) {\n  var entry = queriesMap.get(query);\n  // else path is impossible to test in normal situation\n  /* istanbul ignore else */\n  if (entry) {\n    var mql = entry.mql,\n      dispatchers = entry.dispatchers,\n      listener = entry.listener;\n    dispatchers.delete(setState);\n    if (!dispatchers.size) {\n      queriesMap.delete(query);\n      if (mql.removeEventListener) mql.removeEventListener('change', listener);else mql.removeListener(listener);\n    }\n  }\n};\n/**\n * Tracks the state of CSS media query.\n *\n * @param query CSS media query to track.\n * @param options Hook options:\n * `initializeWithValue` (default: `true`) - Determine media query match state on first render. Setting\n * this to false will make the hook yield `undefined` on first render.\n */\nexport function useMediaQuery(query) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var _options$initializeWi = options.initializeWithValue,\n    initializeWithValue = _options$initializeWi === void 0 ? true : _options$initializeWi;\n  if (!isBrowser) {\n    initializeWithValue = false;\n  }\n  var _useState = useState(function () {\n      if (initializeWithValue) {\n        var entry = queriesMap.get(query);\n        if (!entry) {\n          entry = createQueryEntry(query);\n          queriesMap.set(query, entry);\n        }\n        return entry.mql.matches;\n      }\n    }),\n    _useState2 = _slicedToArray(_useState, 2),\n    state = _useState2[0],\n    setState = _useState2[1];\n  useEffect(function () {\n    querySubscribe(query, setState);\n    return function () {\n      return queryUnsubscribe(query, setState);\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [query]);\n  return state;\n}","map":{"version":3,"names":["useEffect","useState","isBrowser","queriesMap","Map","createQueryEntry","query","mql","matchMedia","dispatchers","Set","listener","forEach","d","matches","addEventListener","passive","addListener","querySubscribe","setState","entry","get","set","add","queryUnsubscribe","delete","size","removeEventListener","removeListener","useMediaQuery","options","arguments","length","undefined","_options$initializeWi","initializeWithValue","_useState","_useState2","_slicedToArray","state"],"sources":["C:/Users/trs_user/Documents/my/bntu-library/node_modules/@react-hookz/web/esm/useMediaQuery/index.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { isBrowser } from \"../util/const.js\";\nconst queriesMap = new Map();\nconst createQueryEntry = (query) => {\n    const mql = matchMedia(query);\n    const dispatchers = new Set();\n    const listener = () => {\n        dispatchers.forEach((d) => d(mql.matches));\n    };\n    if (mql.addEventListener)\n        mql.addEventListener('change', listener, { passive: true });\n    else\n        mql.addListener(listener);\n    return {\n        mql,\n        dispatchers,\n        listener,\n    };\n};\nconst querySubscribe = (query, setState) => {\n    let entry = queriesMap.get(query);\n    if (!entry) {\n        entry = createQueryEntry(query);\n        queriesMap.set(query, entry);\n    }\n    entry.dispatchers.add(setState);\n    setState(entry.mql.matches);\n};\nconst queryUnsubscribe = (query, setState) => {\n    const entry = queriesMap.get(query);\n    // else path is impossible to test in normal situation\n    /* istanbul ignore else */\n    if (entry) {\n        const { mql, dispatchers, listener } = entry;\n        dispatchers.delete(setState);\n        if (!dispatchers.size) {\n            queriesMap.delete(query);\n            if (mql.removeEventListener)\n                mql.removeEventListener('change', listener);\n            else\n                mql.removeListener(listener);\n        }\n    }\n};\n/**\n * Tracks the state of CSS media query.\n *\n * @param query CSS media query to track.\n * @param options Hook options:\n * `initializeWithValue` (default: `true`) - Determine media query match state on first render. Setting\n * this to false will make the hook yield `undefined` on first render.\n */\nexport function useMediaQuery(query, options = {}) {\n    let { initializeWithValue = true } = options;\n    if (!isBrowser) {\n        initializeWithValue = false;\n    }\n    const [state, setState] = useState(() => {\n        if (initializeWithValue) {\n            let entry = queriesMap.get(query);\n            if (!entry) {\n                entry = createQueryEntry(query);\n                queriesMap.set(query, entry);\n            }\n            return entry.mql.matches;\n        }\n    });\n    useEffect(() => {\n        querySubscribe(query, setState);\n        return () => queryUnsubscribe(query, setState);\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [query]);\n    return state;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}